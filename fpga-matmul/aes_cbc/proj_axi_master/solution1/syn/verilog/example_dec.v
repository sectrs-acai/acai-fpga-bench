// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module example_dec (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        crypto_buff_address0,
        crypto_buff_ce0,
        crypto_buff_q0,
        pt_address0,
        pt_ce0,
        pt_we0,
        pt_d0
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] crypto_buff_address0;
output   crypto_buff_ce0;
input  [127:0] crypto_buff_q0;
output  [6:0] pt_address0;
output   pt_ce0;
output   pt_we0;
output  [127:0] pt_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [127:0] key_r_reg_407;
wire    ap_CS_fsm_state5;
reg   [127:0] IV_reg_412;
reg   [0:0] e_reg_417;
reg   [0:0] end_reg_455;
wire    ap_CS_fsm_state10;
wire    grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_start;
wire    grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_done;
wire    grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_idle;
wire    grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_ready;
wire   [127:0] grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ciphertextStrm_din;
wire    grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ciphertextStrm_write;
wire   [0:0] grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_endCiphertextStrm_din;
wire    grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_endCiphertextStrm_write;
wire   [6:0] grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_crypto_buff_address0;
wire    grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_crypto_buff_ce0;
wire    grp_updateKey_1_fu_202_ap_start;
wire    grp_updateKey_1_fu_202_ap_done;
wire    grp_updateKey_1_fu_202_ap_idle;
wire    grp_updateKey_1_fu_202_ap_ready;
wire   [127:0] grp_updateKey_1_fu_202_this_1_0;
wire    grp_updateKey_1_fu_202_this_1_0_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_1;
wire    grp_updateKey_1_fu_202_this_1_1_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_2;
wire    grp_updateKey_1_fu_202_this_1_2_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_3;
wire    grp_updateKey_1_fu_202_this_1_3_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_4;
wire    grp_updateKey_1_fu_202_this_1_4_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_5;
wire    grp_updateKey_1_fu_202_this_1_5_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_6;
wire    grp_updateKey_1_fu_202_this_1_6_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_7;
wire    grp_updateKey_1_fu_202_this_1_7_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_8;
wire    grp_updateKey_1_fu_202_this_1_8_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_9;
wire    grp_updateKey_1_fu_202_this_1_9_ap_vld;
wire   [127:0] grp_updateKey_1_fu_202_this_1_10;
wire    grp_updateKey_1_fu_202_this_1_10_ap_vld;
wire    grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_start;
wire    grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_done;
wire    grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_idle;
wire    grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_ready;
wire    grp_dec_Pipeline_decryption_cbc_loop_fu_223_endCiphertextStrm_read;
wire    grp_dec_Pipeline_decryption_cbc_loop_fu_223_ciphertextStrm_read;
wire   [127:0] grp_dec_Pipeline_decryption_cbc_loop_fu_223_plaintextStrm_din;
wire    grp_dec_Pipeline_decryption_cbc_loop_fu_223_plaintextStrm_write;
wire   [0:0] grp_dec_Pipeline_decryption_cbc_loop_fu_223_endPlaintextStrm_din;
wire    grp_dec_Pipeline_decryption_cbc_loop_fu_223_endPlaintextStrm_write;
wire    grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_start;
wire    grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_done;
wire    grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_idle;
wire    grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_ready;
wire    grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_endPlaintextStrm_read;
wire    grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_plaintextStrm_read;
wire   [6:0] grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_address0;
wire    grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_ce0;
wire    grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_we0;
wire   [127:0] grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_d0;
reg    grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ciphertextStrm_full_n;
reg    ciphertextStrm_write;
reg   [0:0] endCiphertextStrm_din;
wire    endCiphertextStrm_full_n;
reg    endCiphertextStrm_write;
reg    grp_updateKey_1_fu_202_ap_start_reg;
wire   [127:0] cipherkeyStrm_dout;
wire    cipherkeyStrm_empty_n;
reg    cipherkeyStrm_read;
wire   [127:0] IVStrm_dout;
wire    IVStrm_empty_n;
reg    IVStrm_read;
wire   [0:0] endCiphertextStrm_dout;
wire    endCiphertextStrm_empty_n;
reg    endCiphertextStrm_read;
reg    ap_block_state5;
reg    ap_block_state5_ignore_call40;
reg   [127:0] decipher_key_list_V_fu_102;
wire    ap_CS_fsm_state6;
reg   [127:0] decipher_key_list_V_1_fu_106;
reg   [127:0] decipher_key_list_V_2_fu_110;
reg   [127:0] decipher_key_list_V_3_fu_114;
reg   [127:0] decipher_key_list_V_4_fu_118;
reg   [127:0] decipher_key_list_V_5_fu_122;
reg   [127:0] decipher_key_list_V_6_fu_126;
reg   [127:0] decipher_key_list_V_7_fu_130;
reg   [127:0] decipher_key_list_V_8_fu_134;
reg   [127:0] decipher_key_list_V_9_fu_138;
reg   [127:0] decipher_key_list_V_10_fu_142;
reg    grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [127:0] ciphertextStrm_dout;
wire    ciphertextStrm_empty_n;
reg    ciphertextStrm_read;
wire    plaintextStrm_full_n;
reg    plaintextStrm_write;
reg   [0:0] endPlaintextStrm_din;
wire    endPlaintextStrm_full_n;
reg    endPlaintextStrm_write;
reg    grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_start_reg;
reg   [11:0] ap_NS_fsm;
wire    ap_NS_fsm_state11;
wire    ap_CS_fsm_state12;
wire   [127:0] plaintextStrm_dout;
wire    plaintextStrm_empty_n;
reg    plaintextStrm_read;
wire   [0:0] endPlaintextStrm_dout;
wire    endPlaintextStrm_empty_n;
reg    endPlaintextStrm_read;
wire    cipherkeyStrm_full_n;
reg    cipherkeyStrm_write;
wire    IVStrm_full_n;
reg    IVStrm_write;
reg    ap_block_state1;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state9;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
reg    ap_ST_fsm_state12_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_start_reg = 1'b0;
#0 grp_updateKey_1_fu_202_ap_start_reg = 1'b0;
#0 grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_start_reg = 1'b0;
#0 grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_start_reg = 1'b0;
end

example_dec_Pipeline_VITIS_LOOP_118_3 grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_start),
    .ap_done(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_done),
    .ap_idle(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_idle),
    .ap_ready(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_ready),
    .ciphertextStrm_din(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ciphertextStrm_din),
    .ciphertextStrm_full_n(ciphertextStrm_full_n),
    .ciphertextStrm_write(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ciphertextStrm_write),
    .endCiphertextStrm_din(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_endCiphertextStrm_din),
    .endCiphertextStrm_full_n(endCiphertextStrm_full_n),
    .endCiphertextStrm_write(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_endCiphertextStrm_write),
    .crypto_buff_address0(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_crypto_buff_address0),
    .crypto_buff_ce0(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_crypto_buff_ce0),
    .crypto_buff_q0(crypto_buff_q0)
);

example_updateKey_1 grp_updateKey_1_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_updateKey_1_fu_202_ap_start),
    .ap_done(grp_updateKey_1_fu_202_ap_done),
    .ap_idle(grp_updateKey_1_fu_202_ap_idle),
    .ap_ready(grp_updateKey_1_fu_202_ap_ready),
    .this_1_0(grp_updateKey_1_fu_202_this_1_0),
    .this_1_0_ap_vld(grp_updateKey_1_fu_202_this_1_0_ap_vld),
    .this_1_1(grp_updateKey_1_fu_202_this_1_1),
    .this_1_1_ap_vld(grp_updateKey_1_fu_202_this_1_1_ap_vld),
    .this_1_2(grp_updateKey_1_fu_202_this_1_2),
    .this_1_2_ap_vld(grp_updateKey_1_fu_202_this_1_2_ap_vld),
    .this_1_3(grp_updateKey_1_fu_202_this_1_3),
    .this_1_3_ap_vld(grp_updateKey_1_fu_202_this_1_3_ap_vld),
    .this_1_4(grp_updateKey_1_fu_202_this_1_4),
    .this_1_4_ap_vld(grp_updateKey_1_fu_202_this_1_4_ap_vld),
    .this_1_5(grp_updateKey_1_fu_202_this_1_5),
    .this_1_5_ap_vld(grp_updateKey_1_fu_202_this_1_5_ap_vld),
    .this_1_6(grp_updateKey_1_fu_202_this_1_6),
    .this_1_6_ap_vld(grp_updateKey_1_fu_202_this_1_6_ap_vld),
    .this_1_7(grp_updateKey_1_fu_202_this_1_7),
    .this_1_7_ap_vld(grp_updateKey_1_fu_202_this_1_7_ap_vld),
    .this_1_8(grp_updateKey_1_fu_202_this_1_8),
    .this_1_8_ap_vld(grp_updateKey_1_fu_202_this_1_8_ap_vld),
    .this_1_9(grp_updateKey_1_fu_202_this_1_9),
    .this_1_9_ap_vld(grp_updateKey_1_fu_202_this_1_9_ap_vld),
    .this_1_10(grp_updateKey_1_fu_202_this_1_10),
    .this_1_10_ap_vld(grp_updateKey_1_fu_202_this_1_10_ap_vld),
    .cipherkey(key_r_reg_407)
);

example_dec_Pipeline_decryption_cbc_loop grp_dec_Pipeline_decryption_cbc_loop_fu_223(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_start),
    .ap_done(grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_done),
    .ap_idle(grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_idle),
    .ap_ready(grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_ready),
    .endCiphertextStrm_dout(endCiphertextStrm_dout),
    .endCiphertextStrm_empty_n(endCiphertextStrm_empty_n),
    .endCiphertextStrm_read(grp_dec_Pipeline_decryption_cbc_loop_fu_223_endCiphertextStrm_read),
    .ciphertextStrm_dout(ciphertextStrm_dout),
    .ciphertextStrm_empty_n(ciphertextStrm_empty_n),
    .ciphertextStrm_read(grp_dec_Pipeline_decryption_cbc_loop_fu_223_ciphertextStrm_read),
    .plaintextStrm_din(grp_dec_Pipeline_decryption_cbc_loop_fu_223_plaintextStrm_din),
    .plaintextStrm_full_n(plaintextStrm_full_n),
    .plaintextStrm_write(grp_dec_Pipeline_decryption_cbc_loop_fu_223_plaintextStrm_write),
    .endPlaintextStrm_din(grp_dec_Pipeline_decryption_cbc_loop_fu_223_endPlaintextStrm_din),
    .endPlaintextStrm_full_n(endPlaintextStrm_full_n),
    .endPlaintextStrm_write(grp_dec_Pipeline_decryption_cbc_loop_fu_223_endPlaintextStrm_write),
    .IV(IV_reg_412),
    .e(e_reg_417),
    .rhs_V(decipher_key_list_V_10_fu_142),
    .decipher_key_list_V_9_load(decipher_key_list_V_9_fu_138),
    .decipher_key_list_V_8_load(decipher_key_list_V_8_fu_134),
    .decipher_key_list_V_7_load(decipher_key_list_V_7_fu_130),
    .decipher_key_list_V_6_load(decipher_key_list_V_6_fu_126),
    .decipher_key_list_V_5_load(decipher_key_list_V_5_fu_122),
    .decipher_key_list_V_4_load(decipher_key_list_V_4_fu_118),
    .decipher_key_list_V_3_load(decipher_key_list_V_3_fu_114),
    .decipher_key_list_V_2_load(decipher_key_list_V_2_fu_110),
    .decipher_key_list_V_1_load(decipher_key_list_V_1_fu_106),
    .decipher_key_list_V_load(decipher_key_list_V_fu_102)
);

example_dec_Pipeline_VITIS_LOOP_129_4 grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_start),
    .ap_done(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_done),
    .ap_idle(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_idle),
    .ap_ready(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_ready),
    .endPlaintextStrm_dout(endPlaintextStrm_dout),
    .endPlaintextStrm_empty_n(endPlaintextStrm_empty_n),
    .endPlaintextStrm_read(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_endPlaintextStrm_read),
    .plaintextStrm_dout(plaintextStrm_dout),
    .plaintextStrm_empty_n(plaintextStrm_empty_n),
    .plaintextStrm_read(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_plaintextStrm_read),
    .end_r(end_reg_455),
    .pt_address0(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_address0),
    .pt_ce0(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_ce0),
    .pt_we0(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_we0),
    .pt_d0(grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_d0)
);

example_fifo_w128_d256_A ciphertextStrm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ciphertextStrm_din),
    .if_full_n(ciphertextStrm_full_n),
    .if_write(ciphertextStrm_write),
    .if_dout(ciphertextStrm_dout),
    .if_empty_n(ciphertextStrm_empty_n),
    .if_read(ciphertextStrm_read)
);

example_fifo_w1_d256_S endCiphertextStrm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(endCiphertextStrm_din),
    .if_full_n(endCiphertextStrm_full_n),
    .if_write(endCiphertextStrm_write),
    .if_dout(endCiphertextStrm_dout),
    .if_empty_n(endCiphertextStrm_empty_n),
    .if_read(endCiphertextStrm_read)
);

example_fifo_w128_d2_S cipherkeyStrm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(128'd149452120213688298009235146691947225697),
    .if_full_n(cipherkeyStrm_full_n),
    .if_write(cipherkeyStrm_write),
    .if_dout(cipherkeyStrm_dout),
    .if_empty_n(cipherkeyStrm_empty_n),
    .if_read(cipherkeyStrm_read)
);

example_fifo_w128_d2_S IVStrm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(128'd149452120213688298009235146691947225697),
    .if_full_n(IVStrm_full_n),
    .if_write(IVStrm_write),
    .if_dout(IVStrm_dout),
    .if_empty_n(IVStrm_empty_n),
    .if_read(IVStrm_read)
);

example_fifo_w128_d256_A plaintextStrm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_dec_Pipeline_decryption_cbc_loop_fu_223_plaintextStrm_din),
    .if_full_n(plaintextStrm_full_n),
    .if_write(plaintextStrm_write),
    .if_dout(plaintextStrm_dout),
    .if_empty_n(plaintextStrm_empty_n),
    .if_read(plaintextStrm_read)
);

example_fifo_w1_d256_S endPlaintextStrm_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(endPlaintextStrm_din),
    .if_full_n(endPlaintextStrm_full_n),
    .if_write(endPlaintextStrm_write),
    .if_dout(endPlaintextStrm_dout),
    .if_empty_n(endPlaintextStrm_empty_n),
    .if_read(endPlaintextStrm_read)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_start_reg <= 1'b1;
        end else if ((grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_ready == 1'b1)) begin
            grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state10) & (1'b1 == ap_NS_fsm_state11))) begin
            grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_start_reg <= 1'b1;
        end else if ((grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_ready == 1'b1)) begin
            grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_start_reg <= 1'b1;
        end else if ((grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_ready == 1'b1)) begin
            grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_updateKey_1_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if ((~((1'b0 == IVStrm_empty_n) | (endCiphertextStrm_empty_n == 1'b0) | (cipherkeyStrm_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
            grp_updateKey_1_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_updateKey_1_fu_202_ap_ready == 1'b1)) begin
            grp_updateKey_1_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        IV_reg_412 <= IVStrm_dout;
        e_reg_417 <= endCiphertextStrm_dout;
        key_r_reg_407 <= cipherkeyStrm_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_updateKey_1_fu_202_this_1_10_ap_vld == 1'b1))) begin
        decipher_key_list_V_10_fu_142 <= grp_updateKey_1_fu_202_this_1_10;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_updateKey_1_fu_202_this_1_1_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        decipher_key_list_V_1_fu_106 <= grp_updateKey_1_fu_202_this_1_1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_updateKey_1_fu_202_this_1_2_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        decipher_key_list_V_2_fu_110 <= grp_updateKey_1_fu_202_this_1_2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_updateKey_1_fu_202_this_1_3_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        decipher_key_list_V_3_fu_114 <= grp_updateKey_1_fu_202_this_1_3;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_updateKey_1_fu_202_this_1_4_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        decipher_key_list_V_4_fu_118 <= grp_updateKey_1_fu_202_this_1_4;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_updateKey_1_fu_202_this_1_5_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        decipher_key_list_V_5_fu_122 <= grp_updateKey_1_fu_202_this_1_5;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_updateKey_1_fu_202_this_1_6_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        decipher_key_list_V_6_fu_126 <= grp_updateKey_1_fu_202_this_1_6;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_updateKey_1_fu_202_this_1_7_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        decipher_key_list_V_7_fu_130 <= grp_updateKey_1_fu_202_this_1_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_updateKey_1_fu_202_this_1_8_ap_vld == 1'b1))) begin
        decipher_key_list_V_8_fu_134 <= grp_updateKey_1_fu_202_this_1_8;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (grp_updateKey_1_fu_202_this_1_9_ap_vld == 1'b1))) begin
        decipher_key_list_V_9_fu_138 <= grp_updateKey_1_fu_202_this_1_9;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_updateKey_1_fu_202_this_1_0_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        decipher_key_list_V_fu_102 <= grp_updateKey_1_fu_202_this_1_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        end_reg_455 <= endPlaintextStrm_dout;
    end
end

always @ (*) begin
    if ((~((1'b0 == IVStrm_empty_n) | (endCiphertextStrm_empty_n == 1'b0) | (cipherkeyStrm_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        IVStrm_read = 1'b1;
    end else begin
        IVStrm_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == IVStrm_full_n) | (cipherkeyStrm_full_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        IVStrm_write = 1'b1;
    end else begin
        IVStrm_write = 1'b0;
    end
end

always @ (*) begin
    if ((endPlaintextStrm_empty_n == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

always @ (*) begin
    if ((grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_done == 1'b0)) begin
        ap_ST_fsm_state12_blk = 1'b1;
    end else begin
        ap_ST_fsm_state12_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == IVStrm_full_n) | (cipherkeyStrm_full_n == 1'b0) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((endCiphertextStrm_full_n == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == IVStrm_empty_n) | (endCiphertextStrm_empty_n == 1'b0) | (cipherkeyStrm_empty_n == 1'b0))) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_updateKey_1_fu_202_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((endPlaintextStrm_full_n == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state12) & (grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_done == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == IVStrm_empty_n) | (endCiphertextStrm_empty_n == 1'b0) | (cipherkeyStrm_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        cipherkeyStrm_read = 1'b1;
    end else begin
        cipherkeyStrm_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == IVStrm_full_n) | (cipherkeyStrm_full_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        cipherkeyStrm_write = 1'b1;
    end else begin
        cipherkeyStrm_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ciphertextStrm_read = grp_dec_Pipeline_decryption_cbc_loop_fu_223_ciphertextStrm_read;
    end else begin
        ciphertextStrm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ciphertextStrm_write = grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ciphertextStrm_write;
    end else begin
        ciphertextStrm_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (endCiphertextStrm_full_n == 1'b1))) begin
        endCiphertextStrm_din = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        endCiphertextStrm_din = grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_endCiphertextStrm_din;
    end else begin
        endCiphertextStrm_din = grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_endCiphertextStrm_din;
    end
end

always @ (*) begin
    if ((~((1'b0 == IVStrm_empty_n) | (endCiphertextStrm_empty_n == 1'b0) | (cipherkeyStrm_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
        endCiphertextStrm_read = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        endCiphertextStrm_read = grp_dec_Pipeline_decryption_cbc_loop_fu_223_endCiphertextStrm_read;
    end else begin
        endCiphertextStrm_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (endCiphertextStrm_full_n == 1'b1))) begin
        endCiphertextStrm_write = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        endCiphertextStrm_write = grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_endCiphertextStrm_write;
    end else begin
        endCiphertextStrm_write = 1'b0;
    end
end

always @ (*) begin
    if (((endPlaintextStrm_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        endPlaintextStrm_din = 1'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        endPlaintextStrm_din = grp_dec_Pipeline_decryption_cbc_loop_fu_223_endPlaintextStrm_din;
    end else begin
        endPlaintextStrm_din = grp_dec_Pipeline_decryption_cbc_loop_fu_223_endPlaintextStrm_din;
    end
end

always @ (*) begin
    if (((endPlaintextStrm_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        endPlaintextStrm_read = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        endPlaintextStrm_read = grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_endPlaintextStrm_read;
    end else begin
        endPlaintextStrm_read = 1'b0;
    end
end

always @ (*) begin
    if (((endPlaintextStrm_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        endPlaintextStrm_write = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        endPlaintextStrm_write = grp_dec_Pipeline_decryption_cbc_loop_fu_223_endPlaintextStrm_write;
    end else begin
        endPlaintextStrm_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        plaintextStrm_read = grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_plaintextStrm_read;
    end else begin
        plaintextStrm_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        plaintextStrm_write = grp_dec_Pipeline_decryption_cbc_loop_fu_223_plaintextStrm_write;
    end else begin
        plaintextStrm_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((1'b0 == IVStrm_full_n) | (cipherkeyStrm_full_n == 1'b0) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (endCiphertextStrm_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((1'b0 == IVStrm_empty_n) | (endCiphertextStrm_empty_n == 1'b0) | (cipherkeyStrm_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_updateKey_1_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((endPlaintextStrm_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((endPlaintextStrm_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state11 = ap_NS_fsm[32'd10];

always @ (*) begin
    ap_block_state1 = ((1'b0 == IVStrm_full_n) | (cipherkeyStrm_full_n == 1'b0) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((1'b0 == IVStrm_empty_n) | (endCiphertextStrm_empty_n == 1'b0) | (cipherkeyStrm_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5_ignore_call40 = ((1'b0 == IVStrm_empty_n) | (endCiphertextStrm_empty_n == 1'b0) | (cipherkeyStrm_empty_n == 1'b0));
end

assign crypto_buff_address0 = grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_crypto_buff_address0;

assign crypto_buff_ce0 = grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_crypto_buff_ce0;

assign grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_start = grp_dec_Pipeline_VITIS_LOOP_118_3_fu_194_ap_start_reg;

assign grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_start = grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_ap_start_reg;

assign grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_start = grp_dec_Pipeline_decryption_cbc_loop_fu_223_ap_start_reg;

assign grp_updateKey_1_fu_202_ap_start = grp_updateKey_1_fu_202_ap_start_reg;

assign pt_address0 = grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_address0;

assign pt_ce0 = grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_ce0;

assign pt_d0 = grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_d0;

assign pt_we0 = grp_dec_Pipeline_VITIS_LOOP_129_4_fu_248_pt_we0;

endmodule //example_dec
