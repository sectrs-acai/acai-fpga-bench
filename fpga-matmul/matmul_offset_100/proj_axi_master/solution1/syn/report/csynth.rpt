

================================================================
== Synthesis Summary Report of 'example'
================================================================
+ General Information: 
    * Date:           Thu Apr 20 22:21:16 2023
    * Version:        2022.2 (Build 3670227 on Oct 13 2022)
    * Project:        proj_axi_master
    * Solution:       solution1 (Vivado IP Flow Target)
    * Product family: virtexuplus
    * Target device:  xcvu9p-flga2104-2-i
    

+ Performance & Resource Estimates: 
    
    PS: '+' for module; 'o' for loop; '*' for dataflow
    +--------------------------------------+------+------+---------+-----------+----------+---------+-------+----------+---------+---------+------------+------------+-----+
    |                Modules               | Issue|      | Latency |  Latency  | Iteration|         |  Trip |          |         |         |            |            |     |
    |                & Loops               | Type | Slack| (cycles)|    (ns)   |  Latency | Interval| Count | Pipelined|  BRAM   |   DSP   |     FF     |     LUT    | URAM|
    +--------------------------------------+------+------+---------+-----------+----------+---------+-------+----------+---------+---------+------------+------------+-----+
    |+ example                             |     -|  0.00|        -|          -|         -|        -|      -|        no|  48 (1%)|  7 (~0%)|  2163 (~0%)|  3093 (~0%)|    -|
    | + example_Pipeline_1                 |     -|  0.00|    10003|  5.002e+04|         -|    10003|      -|        no|        -|        -|    80 (~0%)|    84 (~0%)|    -|
    |  o Loop 1                            |     -|  3.65|    10001|  5.000e+04|         3|        1|  10000|       yes|        -|        -|           -|           -|    -|
    | + example_Pipeline_2                 |     -|  0.00|    10003|  5.002e+04|         -|    10003|      -|        no|        -|        -|    80 (~0%)|    84 (~0%)|    -|
    |  o Loop 1                            |     -|  3.65|    10001|  5.000e+04|         3|        1|  10000|       yes|        -|        -|           -|           -|    -|
    | + example_Pipeline_3                 |     -|  0.00|    10003|  5.002e+04|         -|    10003|      -|        no|        -|        -|    80 (~0%)|    84 (~0%)|    -|
    |  o Loop 1                            |     -|  3.65|    10001|  5.000e+04|         3|        1|  10000|       yes|        -|        -|           -|           -|    -|
    | + example_Pipeline_5                 |     -|  0.00|    10003|  5.002e+04|         -|    10003|      -|        no|        -|        -|    52 (~0%)|    82 (~0%)|    -|
    |  o Loop 1                            |     -|  3.65|    10001|  5.000e+04|         3|        1|  10000|       yes|        -|        -|           -|           -|    -|
    | o VITIS_LOOP_20_1_VITIS_LOOP_21_2    |     -|  3.65|        -|          -|         -|        -|      -|        no|        -|        -|           -|           -|    -|
    |  + example_Pipeline_VITIS_LOOP_23_3  |     -|  0.48|        -|          -|         -|        -|      -|        no|        -|  3 (~0%)|   208 (~0%)|   261 (~0%)|    -|
    |   o VITIS_LOOP_23_3                  |     -|  3.65|        -|          -|         4|        1|      -|       yes|        -|        -|           -|           -|    -|
    +--------------------------------------+------+------+---------+-----------+----------+---------+-------+----------+---------+---------+------------+------------+-----+


================================================================
== HW Interfaces
================================================================
* M_AXI
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| Interface  | Data Width | Address Width | Latency | Offset | Register | Max Widen | Max Read     | Max Write    | Num Read    | Num Write   |
|            | (SW->HW)   |               |         |        |          | Bitwidth  | Burst Length | Burst Length | Outstanding | Outstanding |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+
| m_axi_gmem | 32 -> 32   | 64            | 0       | slave  | 0        | 0         | 16           | 16           | 16          | 16          |
+------------+------------+---------------+---------+--------+----------+-----------+--------------+--------------+-------------+-------------+

* S_AXILITE Interfaces
+-------------+------------+---------------+--------+----------+
| Interface   | Data Width | Address Width | Offset | Register |
+-------------+------------+---------------+--------+----------+
| s_axi_BUS_A | 32         | 7             | 16     | 0        |
+-------------+------------+---------------+--------+----------+

* S_AXILITE Registers
+-------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| Interface   | Register | Offset | Width | Access | Description                      | Bit Fields                                                           |
+-------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+
| s_axi_BUS_A | CTRL     | 0x00   | 32    | RW     | Control signals                  | 0=AP_START 1=AP_DONE 2=AP_IDLE 3=AP_READY 7=AUTO_RESTART 9=INTERRUPT |
| s_axi_BUS_A | GIER     | 0x04   | 32    | RW     | Global Interrupt Enable Register | 0=Enable                                                             |
| s_axi_BUS_A | IP_IER   | 0x08   | 32    | RW     | IP Interrupt Enable Register     | 0=CHAN0_INT_EN 1=CHAN1_INT_EN                                        |
| s_axi_BUS_A | IP_ISR   | 0x0c   | 32    | RW     | IP Interrupt Status Register     | 0=CHAN0_INT_ST 1=CHAN1_INT_ST                                        |
| s_axi_BUS_A | a_1      | 0x10   | 32    | W      | Data signal of a                 |                                                                      |
| s_axi_BUS_A | a_2      | 0x14   | 32    | W      | Data signal of a                 |                                                                      |
| s_axi_BUS_A | b_1      | 0x1c   | 32    | W      | Data signal of b                 |                                                                      |
| s_axi_BUS_A | b_2      | 0x20   | 32    | W      | Data signal of b                 |                                                                      |
| s_axi_BUS_A | c_1      | 0x28   | 32    | W      | Data signal of c                 |                                                                      |
| s_axi_BUS_A | c_2      | 0x2c   | 32    | W      | Data signal of c                 |                                                                      |
| s_axi_BUS_A | size_r   | 0x34   | 32    | W      | Data signal of size_r            |                                                                      |
| s_axi_BUS_A | size_c   | 0x3c   | 32    | W      | Data signal of size_c            |                                                                      |
+-------------+----------+--------+-------+--------+----------------------------------+----------------------------------------------------------------------+

* TOP LEVEL CONTROL
+-----------+------------+-----------+
| Interface | Type       | Ports     |
+-----------+------------+-----------+
| ap_clk    | clock      | ap_clk    |
| ap_rst_n  | reset      | ap_rst_n  |
| interrupt | interrupt  | interrupt |
| ap_ctrl   | ap_ctrl_hs |           |
+-----------+------------+-----------+


================================================================
== SW I/O Information
================================================================
* Top Function Arguments
+----------+-----------+----------+
| Argument | Direction | Datatype |
+----------+-----------+----------+
| a        | inout     | pointer  |
| b        | inout     | pointer  |
| c        | inout     | pointer  |
| size_r   | in        | int      |
| size_c   | in        | int      |
+----------+-----------+----------+

* SW-to-HW Mapping
+----------+--------------+-----------+----------+----------------------------------+
| Argument | HW Interface | HW Type   | HW Usage | HW Info                          |
+----------+--------------+-----------+----------+----------------------------------+
| a        | m_axi_gmem   | interface |          |                                  |
| a        | s_axi_BUS_A  | register  | offset   | name=a_1 offset=0x10 range=32    |
| a        | s_axi_BUS_A  | register  | offset   | name=a_2 offset=0x14 range=32    |
| b        | m_axi_gmem   | interface |          |                                  |
| b        | s_axi_BUS_A  | register  | offset   | name=b_1 offset=0x1c range=32    |
| b        | s_axi_BUS_A  | register  | offset   | name=b_2 offset=0x20 range=32    |
| c        | m_axi_gmem   | interface |          |                                  |
| c        | s_axi_BUS_A  | register  | offset   | name=c_1 offset=0x28 range=32    |
| c        | s_axi_BUS_A  | register  | offset   | name=c_2 offset=0x2c range=32    |
| size_r   | s_axi_BUS_A  | register  |          | name=size_r offset=0x34 range=32 |
| size_c   | s_axi_BUS_A  | register  |          | name=size_c offset=0x3c range=32 |
+----------+--------------+-----------+----------+----------------------------------+


================================================================
== M_AXI Burst Information
================================================================
 Note: All burst requests might be further partitioned into multiple requests during RTL generation based on max_read_burst_length or max_write_burst_length settings.

* Inferred Burst Summary
+--------------+-----------+-----------+--------+-------+------------------+
| HW Interface | Loop      | Direction | Length | Width | Location         |
+--------------+-----------+-----------+--------+-------+------------------+
| m_axi_gmem   | anonymous | read      | 10000  | 32    | example.cpp:54:3 |
| m_axi_gmem   | anonymous | read      | 10000  | 32    | example.cpp:55:3 |
| m_axi_gmem   | anonymous | read      | 10000  | 32    | example.cpp:56:3 |
| m_axi_gmem   | anonymous | write     | 10000  | 32    | example.cpp:60:3 |
+--------------+-----------+-----------+--------+-------+------------------+

* Inferred Bursts and Widening Missed
+--------------+----------+-----------+-------------------------------------------------------------------------------------------------------+------------+------------------+
| HW Interface | Variable | Loop      | Problem                                                                                               | Resolution | Location         |
+--------------+----------+-----------+-------------------------------------------------------------------------------------------------------+------------+------------------+
| m_axi_gmem   | c        | anonymous | Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 | 214-353    | example.cpp:60:3 |
| m_axi_gmem   | c        | anonymous | Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 | 214-353    | example.cpp:56:3 |
| m_axi_gmem   | b        | anonymous | Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 | 214-353    | example.cpp:55:3 |
| m_axi_gmem   | a        | anonymous | Could not widen since type i32 size is greater than or equal to the max_widen_bitwidth threshold of 0 | 214-353    | example.cpp:54:3 |
+--------------+----------+-----------+-------------------------------------------------------------------------------------------------------+------------+------------------+

    * Resolution URL: www.xilinx.com/cgi-bin/docs/rdoc?v=2022.2;t=hls+guidance;d=XXX-YYY.html (replace XXX-YYY with column value)

================================================================
== Bind Op Report
================================================================
+-------------------------------------+-----+--------+------------+-----+--------+---------+
| Name                                | DSP | Pragma | Variable   | Op  | Impl   | Latency |
+-------------------------------------+-----+--------+------------+-----+--------+---------+
| + example                           | 7   |        |            |     |        |         |
|   mul_32ns_32ns_64_1_1_U21          | 3   |        | mul_ln20   | mul | auto   | 0       |
|   add_ln20_1_fu_346_p2              | -   |        | add_ln20_1 | add | fabric | 0       |
|   add_ln20_fu_355_p2                | -   |        | add_ln20   | add | fabric | 0       |
|   mul_mul_14s_7ns_14_4_1_U22        | 1   |        | mul_ln24   | mul | dsp48  | 3       |
|   add_ln29_fu_402_p2                | -   |        | add_ln29   | add | fabric | 0       |
|   add_ln21_fu_381_p2                | -   |        | add_ln21   | add | fabric | 0       |
|  + example_Pipeline_1               | 0   |        |            |     |        |         |
|    empty_24_fu_94_p2                | -   |        | empty_24   | add | fabric | 0       |
|  + example_Pipeline_2               | 0   |        |            |     |        |         |
|    empty_23_fu_94_p2                | -   |        | empty_23   | add | fabric | 0       |
|  + example_Pipeline_3               | 0   |        |            |     |        |         |
|    empty_22_fu_94_p2                | -   |        | empty_22   | add | fabric | 0       |
|  + example_Pipeline_VITIS_LOOP_23_3 | 3   |        |            |     |        |         |
|    add_ln23_fu_145_p2               | -   |        | add_ln23   | add | fabric | 0       |
|    add_ln24_fu_155_p2               | -   |        | add_ln24   | add | fabric | 0       |
|    add_ln25_1_fu_165_p2             | -   |        | add_ln25_1 | add | fabric | 0       |
|    add_ln25_fu_171_p2               | -   |        | add_ln25   | add | fabric | 0       |
|    mul_32s_32s_32_1_1_U10           | 3   |        | mul_ln27   | mul | auto   | 0       |
|    sum_1_fu_198_p2                  | -   |        | sum_1      | add | fabric | 0       |
|  + example_Pipeline_5               | 0   |        |            |     |        |         |
|    empty_21_fu_99_p2                | -   |        | empty_21   | add | fabric | 0       |
+-------------------------------------+-----+--------+------------+-----+--------+---------+


================================================================
== Bind Storage Report
================================================================
+-----------+------+------+--------+----------+---------+------+---------+
| Name      | BRAM | URAM | Pragma | Variable | Storage | Impl | Latency |
+-----------+------+------+--------+----------+---------+------+---------+
| + example | 48   | 0    |        |          |         |      |         |
|   A_U     | 16   | -    |        | A        | ram_1p  | auto | 1       |
|   B_U     | 16   | -    |        | B        | ram_1p  | auto | 1       |
|   res_U   | 16   | -    |        | res      | ram_1p  | auto | 1       |
+-----------+------+------+--------+----------+---------+------+---------+


================================================================
== Pragma Report
================================================================
* Valid Pragma Syntax
+-----------+-----------------------------------------+-----------------------------------+
| Type      | Options                                 | Location                          |
+-----------+-----------------------------------------+-----------------------------------+
| interface | m_axi port=a depth=250000 offset=slave  | example.cpp:37 in example, a      |
| interface | m_axi port=b depth=250000 offset=slave  | example.cpp:38 in example, b      |
| interface | m_axi port=c depth=250000 offset=slave  | example.cpp:39 in example, c      |
| interface | mode=s_axilite port=a bundle=BUS_A      | example.cpp:40 in example, a      |
| interface | mode=s_axilite port=b bundle=BUS_A      | example.cpp:41 in example, b      |
| interface | mode=s_axilite port=c bundle=BUS_A      | example.cpp:42 in example, c      |
| interface | mode=s_axilite port=size_r bundle=BUS_A | example.cpp:43 in example, size_r |
| interface | mode=s_axilite port=size_c bundle=BUS_A | example.cpp:44 in example, size_c |
| interface | mode=s_axilite port=return bundle=BUS_A | example.cpp:45 in example, return |
+-----------+-----------------------------------------+-----------------------------------+


