-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity example is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_BUS_A_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_BUS_A_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_BUS_A_AWVALID : IN STD_LOGIC;
    s_axi_BUS_A_AWREADY : OUT STD_LOGIC;
    s_axi_BUS_A_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_A_ADDR_WIDTH-1 downto 0);
    s_axi_BUS_A_WVALID : IN STD_LOGIC;
    s_axi_BUS_A_WREADY : OUT STD_LOGIC;
    s_axi_BUS_A_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_A_DATA_WIDTH-1 downto 0);
    s_axi_BUS_A_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_A_DATA_WIDTH/8-1 downto 0);
    s_axi_BUS_A_ARVALID : IN STD_LOGIC;
    s_axi_BUS_A_ARREADY : OUT STD_LOGIC;
    s_axi_BUS_A_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_BUS_A_ADDR_WIDTH-1 downto 0);
    s_axi_BUS_A_RVALID : OUT STD_LOGIC;
    s_axi_BUS_A_RREADY : IN STD_LOGIC;
    s_axi_BUS_A_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_BUS_A_DATA_WIDTH-1 downto 0);
    s_axi_BUS_A_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_BUS_A_BVALID : OUT STD_LOGIC;
    s_axi_BUS_A_BREADY : IN STD_LOGIC;
    s_axi_BUS_A_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of example is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "example_example,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flga2104-2L-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=76,HLS_SYN_DSP=0,HLS_SYN_FF=15123,HLS_SYN_LUT=36040,HLS_VERSION=2022_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (59 downto 0) := "000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (59 downto 0) := "000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (59 downto 0) := "000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (59 downto 0) := "000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (59 downto 0) := "000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (59 downto 0) := "000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (59 downto 0) := "000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (59 downto 0) := "000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (59 downto 0) := "000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (59 downto 0) := "001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (59 downto 0) := "010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (59 downto 0) := "100000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_2710 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010011100010000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal a : STD_LOGIC_VECTOR (63 downto 0);
    signal b : STD_LOGIC_VECTOR (63 downto 0);
    signal c : STD_LOGIC_VECTOR (63 downto 0);
    signal crypto : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal trunc_ln_reg_349 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln1_reg_355 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln2_reg_361 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln3_reg_368 : STD_LOGIC_VECTOR (61 downto 0);
    signal gmem_addr_2_reg_386 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_addr_3_reg_391 : STD_LOGIC_VECTOR (63 downto 0);
    signal crypto_buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal crypto_buff_ce0 : STD_LOGIC;
    signal crypto_buff_we0 : STD_LOGIC_VECTOR (15 downto 0);
    signal crypto_buff_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal ct_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal ct_ce0 : STD_LOGIC;
    signal ct_we0 : STD_LOGIC;
    signal ct_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal pt_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal pt_ce0 : STD_LOGIC;
    signal pt_we0 : STD_LOGIC;
    signal pt_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal A_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal A_ce0 : STD_LOGIC;
    signal A_we0 : STD_LOGIC;
    signal A_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal B_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal B_ce0 : STD_LOGIC;
    signal B_we0 : STD_LOGIC;
    signal B_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal res_ce0 : STD_LOGIC;
    signal res_we0 : STD_LOGIC;
    signal res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal res_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_1_fu_182_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_A_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_1_fu_182_A_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_A_we0 : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_A_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_2_fu_190_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_B_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_2_fu_190_B_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_B_we0 : STD_LOGIC;
    signal grp_example_Pipeline_2_fu_190_B_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_3_fu_198_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_res_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_3_fu_198_res_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_res_we0 : STD_LOGIC;
    signal grp_example_Pipeline_3_fu_198_res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_4_fu_206_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_crypto_buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_example_Pipeline_4_fu_206_crypto_buff_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_4_fu_206_crypto_buff_we0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_example_Pipeline_4_fu_206_crypto_buff_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_we0 : STD_LOGIC;
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_A_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_A_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_B_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_B_ce0 : STD_LOGIC;
    signal grp_dec_fu_221_ap_start : STD_LOGIC;
    signal grp_dec_fu_221_ap_done : STD_LOGIC;
    signal grp_dec_fu_221_ap_idle : STD_LOGIC;
    signal grp_dec_fu_221_ap_ready : STD_LOGIC;
    signal grp_dec_fu_221_crypto_buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dec_fu_221_crypto_buff_ce0 : STD_LOGIC;
    signal grp_dec_fu_221_pt_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_dec_fu_221_pt_ce0 : STD_LOGIC;
    signal grp_dec_fu_221_pt_we0 : STD_LOGIC;
    signal grp_dec_fu_221_pt_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_example_Pipeline_5_fu_233_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_example_Pipeline_5_fu_233_pt_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_example_Pipeline_5_fu_233_pt_ce0 : STD_LOGIC;
    signal grp_enc_fu_241_ap_start : STD_LOGIC;
    signal grp_enc_fu_241_ap_done : STD_LOGIC;
    signal grp_enc_fu_241_ap_idle : STD_LOGIC;
    signal grp_enc_fu_241_ap_ready : STD_LOGIC;
    signal grp_enc_fu_241_crypto_buff_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_enc_fu_241_crypto_buff_ce0 : STD_LOGIC;
    signal grp_enc_fu_241_ct_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_enc_fu_241_ct_ce0 : STD_LOGIC;
    signal grp_enc_fu_241_ct_we0 : STD_LOGIC;
    signal grp_enc_fu_241_ct_d0 : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_example_Pipeline_7_fu_253_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_example_Pipeline_7_fu_253_ct_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_example_Pipeline_7_fu_253_ct_ce0 : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_ap_start : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_ap_done : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_ap_idle : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_ap_ready : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_example_Pipeline_8_fu_261_res_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_example_Pipeline_8_fu_261_res_ce0 : STD_LOGIC;
    signal gmem_AWVALID : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WVALID : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BREADY : STD_LOGIC;
    signal grp_example_Pipeline_1_fu_182_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_example_Pipeline_2_fu_190_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_example_Pipeline_3_fu_198_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_example_Pipeline_4_fu_206_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (59 downto 0);
    signal ap_NS_fsm_state36 : STD_LOGIC;
    signal grp_dec_fu_221_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal grp_example_Pipeline_5_fu_233_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_enc_fu_241_ap_start_reg : STD_LOGIC := '0';
    signal grp_example_Pipeline_7_fu_253_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal grp_example_Pipeline_8_fu_261_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal sext_ln194_fu_309_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln195_fu_319_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln196_fu_329_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln199_fu_339_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_block_state37_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_block_state41_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component example_example_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln194 : IN STD_LOGIC_VECTOR (61 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_we0 : OUT STD_LOGIC;
        A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_example_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln195 : IN STD_LOGIC_VECTOR (61 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_we0 : OUT STD_LOGIC;
        B_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_example_Pipeline_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln196 : IN STD_LOGIC_VECTOR (61 downto 0);
        res_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_we0 : OUT STD_LOGIC;
        res_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_example_Pipeline_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln199 : IN STD_LOGIC_VECTOR (61 downto 0);
        crypto_buff_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        crypto_buff_ce0 : OUT STD_LOGIC;
        crypto_buff_we0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        crypto_buff_d0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component example_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        res_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_we0 : OUT STD_LOGIC;
        res_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_dec IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        crypto_buff_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        crypto_buff_ce0 : OUT STD_LOGIC;
        crypto_buff_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        pt_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pt_ce0 : OUT STD_LOGIC;
        pt_we0 : OUT STD_LOGIC;
        pt_d0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component example_example_Pipeline_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln199 : IN STD_LOGIC_VECTOR (61 downto 0);
        pt_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        pt_ce0 : OUT STD_LOGIC;
        pt_q0 : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component example_enc IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        crypto_buff_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        crypto_buff_ce0 : OUT STD_LOGIC;
        crypto_buff_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        ct_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        ct_ce0 : OUT STD_LOGIC;
        ct_we0 : OUT STD_LOGIC;
        ct_d0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component example_example_Pipeline_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln199 : IN STD_LOGIC_VECTOR (61 downto 0);
        ct_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        ct_ce0 : OUT STD_LOGIC;
        ct_q0 : IN STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component example_example_Pipeline_8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln196 : IN STD_LOGIC_VECTOR (61 downto 0);
        res_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        res_ce0 : OUT STD_LOGIC;
        res_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_crypto_buff_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (15 downto 0);
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component example_ct_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (127 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (127 downto 0) );
    end component;


    component example_A_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component example_BUS_A_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        a : OUT STD_LOGIC_VECTOR (63 downto 0);
        b : OUT STD_LOGIC_VECTOR (63 downto 0);
        c : OUT STD_LOGIC_VECTOR (63 downto 0);
        crypto : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component example_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    crypto_buff_U : component example_crypto_buff_RAM_AUTO_1R1W
    generic map (
        DataWidth => 128,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => crypto_buff_address0,
        ce0 => crypto_buff_ce0,
        we0 => crypto_buff_we0,
        d0 => grp_example_Pipeline_4_fu_206_crypto_buff_d0,
        q0 => crypto_buff_q0);

    ct_U : component example_ct_RAM_AUTO_1R1W
    generic map (
        DataWidth => 128,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => ct_address0,
        ce0 => ct_ce0,
        we0 => ct_we0,
        d0 => grp_enc_fu_241_ct_d0,
        q0 => ct_q0);

    pt_U : component example_ct_RAM_AUTO_1R1W
    generic map (
        DataWidth => 128,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => pt_address0,
        ce0 => pt_ce0,
        we0 => pt_we0,
        d0 => grp_dec_fu_221_pt_d0,
        q0 => pt_q0);

    A_U : component example_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 10000,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => A_address0,
        ce0 => A_ce0,
        we0 => A_we0,
        d0 => grp_example_Pipeline_1_fu_182_A_d0,
        q0 => A_q0);

    B_U : component example_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 10000,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => B_address0,
        ce0 => B_ce0,
        we0 => B_we0,
        d0 => grp_example_Pipeline_2_fu_190_B_d0,
        q0 => B_q0);

    res_U : component example_A_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 10000,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => res_address0,
        ce0 => res_ce0,
        we0 => res_we0,
        d0 => res_d0,
        q0 => res_q0);

    grp_example_Pipeline_1_fu_182 : component example_example_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_1_fu_182_ap_start,
        ap_done => grp_example_Pipeline_1_fu_182_ap_done,
        ap_idle => grp_example_Pipeline_1_fu_182_ap_idle,
        ap_ready => grp_example_Pipeline_1_fu_182_ap_ready,
        m_axi_gmem_AWVALID => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_example_Pipeline_1_fu_182_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_example_Pipeline_1_fu_182_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_example_Pipeline_1_fu_182_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_example_Pipeline_1_fu_182_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_example_Pipeline_1_fu_182_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_example_Pipeline_1_fu_182_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_example_Pipeline_1_fu_182_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_example_Pipeline_1_fu_182_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_example_Pipeline_1_fu_182_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_example_Pipeline_1_fu_182_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln194 => trunc_ln_reg_349,
        A_address0 => grp_example_Pipeline_1_fu_182_A_address0,
        A_ce0 => grp_example_Pipeline_1_fu_182_A_ce0,
        A_we0 => grp_example_Pipeline_1_fu_182_A_we0,
        A_d0 => grp_example_Pipeline_1_fu_182_A_d0);

    grp_example_Pipeline_2_fu_190 : component example_example_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_2_fu_190_ap_start,
        ap_done => grp_example_Pipeline_2_fu_190_ap_done,
        ap_idle => grp_example_Pipeline_2_fu_190_ap_idle,
        ap_ready => grp_example_Pipeline_2_fu_190_ap_ready,
        m_axi_gmem_AWVALID => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_example_Pipeline_2_fu_190_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_example_Pipeline_2_fu_190_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_example_Pipeline_2_fu_190_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_example_Pipeline_2_fu_190_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_example_Pipeline_2_fu_190_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_example_Pipeline_2_fu_190_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_example_Pipeline_2_fu_190_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_example_Pipeline_2_fu_190_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_example_Pipeline_2_fu_190_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_example_Pipeline_2_fu_190_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln195 => trunc_ln1_reg_355,
        B_address0 => grp_example_Pipeline_2_fu_190_B_address0,
        B_ce0 => grp_example_Pipeline_2_fu_190_B_ce0,
        B_we0 => grp_example_Pipeline_2_fu_190_B_we0,
        B_d0 => grp_example_Pipeline_2_fu_190_B_d0);

    grp_example_Pipeline_3_fu_198 : component example_example_Pipeline_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_3_fu_198_ap_start,
        ap_done => grp_example_Pipeline_3_fu_198_ap_done,
        ap_idle => grp_example_Pipeline_3_fu_198_ap_idle,
        ap_ready => grp_example_Pipeline_3_fu_198_ap_ready,
        m_axi_gmem_AWVALID => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_example_Pipeline_3_fu_198_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_example_Pipeline_3_fu_198_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_example_Pipeline_3_fu_198_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_example_Pipeline_3_fu_198_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_example_Pipeline_3_fu_198_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_example_Pipeline_3_fu_198_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_example_Pipeline_3_fu_198_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_example_Pipeline_3_fu_198_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_example_Pipeline_3_fu_198_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_example_Pipeline_3_fu_198_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln196 => trunc_ln2_reg_361,
        res_address0 => grp_example_Pipeline_3_fu_198_res_address0,
        res_ce0 => grp_example_Pipeline_3_fu_198_res_ce0,
        res_we0 => grp_example_Pipeline_3_fu_198_res_we0,
        res_d0 => grp_example_Pipeline_3_fu_198_res_d0);

    grp_example_Pipeline_4_fu_206 : component example_example_Pipeline_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_4_fu_206_ap_start,
        ap_done => grp_example_Pipeline_4_fu_206_ap_done,
        ap_idle => grp_example_Pipeline_4_fu_206_ap_idle,
        ap_ready => grp_example_Pipeline_4_fu_206_ap_ready,
        m_axi_gmem_AWVALID => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_example_Pipeline_4_fu_206_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_example_Pipeline_4_fu_206_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_example_Pipeline_4_fu_206_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_example_Pipeline_4_fu_206_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_example_Pipeline_4_fu_206_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_example_Pipeline_4_fu_206_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_example_Pipeline_4_fu_206_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_example_Pipeline_4_fu_206_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_example_Pipeline_4_fu_206_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_example_Pipeline_4_fu_206_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln199 => trunc_ln3_reg_368,
        crypto_buff_address0 => grp_example_Pipeline_4_fu_206_crypto_buff_address0,
        crypto_buff_ce0 => grp_example_Pipeline_4_fu_206_crypto_buff_ce0,
        crypto_buff_we0 => grp_example_Pipeline_4_fu_206_crypto_buff_we0,
        crypto_buff_d0 => grp_example_Pipeline_4_fu_206_crypto_buff_d0);

    grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214 : component example_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_start,
        ap_done => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_done,
        ap_idle => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_idle,
        ap_ready => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_ready,
        res_address0 => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_address0,
        res_ce0 => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_ce0,
        res_we0 => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_we0,
        res_d0 => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_d0,
        A_address0 => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_A_address0,
        A_ce0 => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_A_ce0,
        A_q0 => A_q0,
        B_address0 => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_B_address0,
        B_ce0 => grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_B_ce0,
        B_q0 => B_q0);

    grp_dec_fu_221 : component example_dec
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_dec_fu_221_ap_start,
        ap_done => grp_dec_fu_221_ap_done,
        ap_idle => grp_dec_fu_221_ap_idle,
        ap_ready => grp_dec_fu_221_ap_ready,
        crypto_buff_address0 => grp_dec_fu_221_crypto_buff_address0,
        crypto_buff_ce0 => grp_dec_fu_221_crypto_buff_ce0,
        crypto_buff_q0 => crypto_buff_q0,
        pt_address0 => grp_dec_fu_221_pt_address0,
        pt_ce0 => grp_dec_fu_221_pt_ce0,
        pt_we0 => grp_dec_fu_221_pt_we0,
        pt_d0 => grp_dec_fu_221_pt_d0);

    grp_example_Pipeline_5_fu_233 : component example_example_Pipeline_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_5_fu_233_ap_start,
        ap_done => grp_example_Pipeline_5_fu_233_ap_done,
        ap_idle => grp_example_Pipeline_5_fu_233_ap_idle,
        ap_ready => grp_example_Pipeline_5_fu_233_ap_ready,
        m_axi_gmem_AWVALID => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_example_Pipeline_5_fu_233_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_example_Pipeline_5_fu_233_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_example_Pipeline_5_fu_233_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_example_Pipeline_5_fu_233_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_example_Pipeline_5_fu_233_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_example_Pipeline_5_fu_233_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_example_Pipeline_5_fu_233_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_example_Pipeline_5_fu_233_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_example_Pipeline_5_fu_233_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv32_0,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_example_Pipeline_5_fu_233_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln199 => trunc_ln3_reg_368,
        pt_address0 => grp_example_Pipeline_5_fu_233_pt_address0,
        pt_ce0 => grp_example_Pipeline_5_fu_233_pt_ce0,
        pt_q0 => pt_q0);

    grp_enc_fu_241 : component example_enc
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_enc_fu_241_ap_start,
        ap_done => grp_enc_fu_241_ap_done,
        ap_idle => grp_enc_fu_241_ap_idle,
        ap_ready => grp_enc_fu_241_ap_ready,
        crypto_buff_address0 => grp_enc_fu_241_crypto_buff_address0,
        crypto_buff_ce0 => grp_enc_fu_241_crypto_buff_ce0,
        crypto_buff_q0 => crypto_buff_q0,
        ct_address0 => grp_enc_fu_241_ct_address0,
        ct_ce0 => grp_enc_fu_241_ct_ce0,
        ct_we0 => grp_enc_fu_241_ct_we0,
        ct_d0 => grp_enc_fu_241_ct_d0);

    grp_example_Pipeline_7_fu_253 : component example_example_Pipeline_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_7_fu_253_ap_start,
        ap_done => grp_example_Pipeline_7_fu_253_ap_done,
        ap_idle => grp_example_Pipeline_7_fu_253_ap_idle,
        ap_ready => grp_example_Pipeline_7_fu_253_ap_ready,
        m_axi_gmem_AWVALID => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_example_Pipeline_7_fu_253_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_example_Pipeline_7_fu_253_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_example_Pipeline_7_fu_253_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_example_Pipeline_7_fu_253_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_example_Pipeline_7_fu_253_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_example_Pipeline_7_fu_253_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_example_Pipeline_7_fu_253_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_example_Pipeline_7_fu_253_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_example_Pipeline_7_fu_253_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv32_0,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_example_Pipeline_7_fu_253_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln199 => trunc_ln3_reg_368,
        ct_address0 => grp_example_Pipeline_7_fu_253_ct_address0,
        ct_ce0 => grp_example_Pipeline_7_fu_253_ct_ce0,
        ct_q0 => ct_q0);

    grp_example_Pipeline_8_fu_261 : component example_example_Pipeline_8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_example_Pipeline_8_fu_261_ap_start,
        ap_done => grp_example_Pipeline_8_fu_261_ap_done,
        ap_idle => grp_example_Pipeline_8_fu_261_ap_idle,
        ap_ready => grp_example_Pipeline_8_fu_261_ap_ready,
        m_axi_gmem_AWVALID => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => gmem_AWREADY,
        m_axi_gmem_AWADDR => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_example_Pipeline_8_fu_261_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_example_Pipeline_8_fu_261_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => gmem_WREADY,
        m_axi_gmem_WDATA => grp_example_Pipeline_8_fu_261_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_example_Pipeline_8_fu_261_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_example_Pipeline_8_fu_261_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_example_Pipeline_8_fu_261_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_example_Pipeline_8_fu_261_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => ap_const_logic_0,
        m_axi_gmem_ARADDR => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_example_Pipeline_8_fu_261_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => ap_const_logic_0,
        m_axi_gmem_RREADY => grp_example_Pipeline_8_fu_261_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => ap_const_lv32_0,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => ap_const_lv9_0,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => gmem_BVALID,
        m_axi_gmem_BREADY => grp_example_Pipeline_8_fu_261_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln196 => trunc_ln2_reg_361,
        res_address0 => grp_example_Pipeline_8_fu_261_res_address0,
        res_ce0 => grp_example_Pipeline_8_fu_261_res_ce0,
        res_q0 => res_q0);

    BUS_A_s_axi_U : component example_BUS_A_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_BUS_A_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_BUS_A_DATA_WIDTH)
    port map (
        AWVALID => s_axi_BUS_A_AWVALID,
        AWREADY => s_axi_BUS_A_AWREADY,
        AWADDR => s_axi_BUS_A_AWADDR,
        WVALID => s_axi_BUS_A_WVALID,
        WREADY => s_axi_BUS_A_WREADY,
        WDATA => s_axi_BUS_A_WDATA,
        WSTRB => s_axi_BUS_A_WSTRB,
        ARVALID => s_axi_BUS_A_ARVALID,
        ARREADY => s_axi_BUS_A_ARREADY,
        ARADDR => s_axi_BUS_A_ARADDR,
        RVALID => s_axi_BUS_A_RVALID,
        RREADY => s_axi_BUS_A_RREADY,
        RDATA => s_axi_BUS_A_RDATA,
        RRESP => s_axi_BUS_A_RRESP,
        BVALID => s_axi_BUS_A_BVALID,
        BREADY => s_axi_BUS_A_BREADY,
        BRESP => s_axi_BUS_A_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        a => a,
        b => b,
        c => c,
        crypto => crypto,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    gmem_m_axi_U : component example_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARLEN => gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => gmem_AWVALID,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => gmem_AWADDR,
        I_AWLEN => gmem_AWLEN,
        I_WVALID => gmem_WVALID,
        I_WREADY => gmem_WREADY,
        I_WDATA => gmem_WDATA,
        I_WSTRB => gmem_WSTRB,
        I_BVALID => gmem_BVALID,
        I_BREADY => gmem_BREADY);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_dec_fu_221_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_dec_fu_221_ap_start_reg <= ap_const_logic_0;
            else
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
                    grp_dec_fu_221_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dec_fu_221_ap_ready = ap_const_logic_1)) then 
                    grp_dec_fu_221_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_enc_fu_241_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_enc_fu_241_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    grp_enc_fu_241_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_enc_fu_241_ap_ready = ap_const_logic_1)) then 
                    grp_enc_fu_241_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_1_fu_182_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_1_fu_182_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_example_Pipeline_1_fu_182_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_1_fu_182_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_1_fu_182_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_2_fu_190_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_2_fu_190_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_example_Pipeline_2_fu_190_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_2_fu_190_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_2_fu_190_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_3_fu_198_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_3_fu_198_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    grp_example_Pipeline_3_fu_198_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_3_fu_198_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_3_fu_198_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_4_fu_206_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_4_fu_206_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    grp_example_Pipeline_4_fu_206_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_4_fu_206_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_4_fu_206_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_5_fu_233_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_5_fu_233_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    grp_example_Pipeline_5_fu_233_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_5_fu_233_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_5_fu_233_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_7_fu_253_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_7_fu_253_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
                    grp_example_Pipeline_7_fu_253_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_7_fu_253_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_7_fu_253_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_8_fu_261_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_8_fu_261_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                    grp_example_Pipeline_8_fu_261_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_8_fu_261_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_8_fu_261_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state36) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                    grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_ready = ap_const_logic_1)) then 
                    grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                gmem_addr_2_reg_386 <= sext_ln196_fu_329_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                gmem_addr_3_reg_391 <= sext_ln199_fu_339_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln1_reg_355 <= b(63 downto 2);
                trunc_ln2_reg_361 <= c(63 downto 2);
                trunc_ln3_reg_368 <= crypto(63 downto 2);
                trunc_ln_reg_349 <= a(63 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state49, ap_CS_fsm_state60, ap_CS_fsm_state29, ap_CS_fsm_state38, ap_CS_fsm_state46, ap_CS_fsm_state42, ap_CS_fsm_state53, grp_example_Pipeline_1_fu_182_ap_done, grp_example_Pipeline_2_fu_190_ap_done, grp_example_Pipeline_3_fu_198_ap_done, grp_dec_fu_221_ap_done, grp_example_Pipeline_7_fu_253_ap_done, grp_example_Pipeline_8_fu_261_ap_done, gmem_AWREADY, gmem_ARREADY, gmem_BVALID, ap_CS_fsm_state10, ap_CS_fsm_state19, ap_CS_fsm_state28, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state41, ap_CS_fsm_state48, ap_CS_fsm_state55, ap_block_state37_on_subcall_done, ap_block_state41_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_example_Pipeline_1_fu_182_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_example_Pipeline_2_fu_190_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((grp_example_Pipeline_3_fu_198_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((ap_const_boolean_0 = ap_block_state37_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                if (((grp_dec_fu_221_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((ap_const_boolean_0 = ap_block_state41_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when ap_ST_fsm_state42 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                if (((grp_example_Pipeline_7_fu_253_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state48))) then
                    ap_NS_fsm <= ap_ST_fsm_state49;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state49 => 
                if (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state49))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state55;
            when ap_ST_fsm_state55 => 
                if (((grp_example_Pipeline_8_fu_261_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(grp_example_Pipeline_1_fu_182_A_address0, grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_A_address0, ap_CS_fsm_state10, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            A_address0 <= grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            A_address0 <= grp_example_Pipeline_1_fu_182_A_address0;
        else 
            A_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(grp_example_Pipeline_1_fu_182_A_ce0, grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_A_ce0, ap_CS_fsm_state10, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            A_ce0 <= grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            A_ce0 <= grp_example_Pipeline_1_fu_182_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    A_we0_assign_proc : process(grp_example_Pipeline_1_fu_182_A_we0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            A_we0 <= grp_example_Pipeline_1_fu_182_A_we0;
        else 
            A_we0 <= ap_const_logic_0;
        end if; 
    end process;


    B_address0_assign_proc : process(grp_example_Pipeline_2_fu_190_B_address0, grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_B_address0, ap_CS_fsm_state19, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            B_address0 <= grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_B_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            B_address0 <= grp_example_Pipeline_2_fu_190_B_address0;
        else 
            B_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    B_ce0_assign_proc : process(grp_example_Pipeline_2_fu_190_B_ce0, grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_B_ce0, ap_CS_fsm_state19, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            B_ce0 <= grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_B_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            B_ce0 <= grp_example_Pipeline_2_fu_190_B_ce0;
        else 
            B_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    B_we0_assign_proc : process(grp_example_Pipeline_2_fu_190_B_we0, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            B_we0 <= grp_example_Pipeline_2_fu_190_B_we0;
        else 
            B_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state36 <= ap_NS_fsm(35);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_example_Pipeline_1_fu_182_ap_done)
    begin
        if ((grp_example_Pipeline_1_fu_182_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_example_Pipeline_2_fu_190_ap_done)
    begin
        if ((grp_example_Pipeline_2_fu_190_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_example_Pipeline_3_fu_198_ap_done)
    begin
        if ((grp_example_Pipeline_3_fu_198_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state29_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;

    ap_ST_fsm_state37_blk_assign_proc : process(ap_block_state37_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state37_on_subcall_done)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state38_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state39_blk_assign_proc : process(grp_dec_fu_221_ap_done)
    begin
        if ((grp_dec_fu_221_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;

    ap_ST_fsm_state41_blk_assign_proc : process(ap_block_state41_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state41_on_subcall_done)) then 
            ap_ST_fsm_state41_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state41_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state42_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state42_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state42_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;

    ap_ST_fsm_state46_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state46_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state46_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state47_blk <= ap_const_logic_0;

    ap_ST_fsm_state48_blk_assign_proc : process(grp_example_Pipeline_7_fu_253_ap_done)
    begin
        if ((grp_example_Pipeline_7_fu_253_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state48_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state48_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state49_blk_assign_proc : process(gmem_AWREADY)
    begin
        if ((gmem_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state49_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state49_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;

    ap_ST_fsm_state53_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state53_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state53_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state54_blk <= ap_const_logic_0;

    ap_ST_fsm_state55_blk_assign_proc : process(grp_example_Pipeline_8_fu_261_ap_done)
    begin
        if ((grp_example_Pipeline_8_fu_261_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state55_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state55_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state60_blk_assign_proc : process(gmem_BVALID)
    begin
        if ((gmem_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state60_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state60_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state37_on_subcall_done_assign_proc : process(grp_example_Pipeline_4_fu_206_ap_done, grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_done)
    begin
                ap_block_state37_on_subcall_done <= ((grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_done = ap_const_logic_0) or (grp_example_Pipeline_4_fu_206_ap_done = ap_const_logic_0));
    end process;


    ap_block_state41_on_subcall_done_assign_proc : process(grp_example_Pipeline_5_fu_233_ap_done, grp_enc_fu_241_ap_done)
    begin
                ap_block_state41_on_subcall_done <= ((grp_enc_fu_241_ap_done = ap_const_logic_0) or (grp_example_Pipeline_5_fu_233_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state60, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state60, gmem_BVALID)
    begin
        if (((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    crypto_buff_address0_assign_proc : process(grp_example_Pipeline_4_fu_206_crypto_buff_address0, grp_dec_fu_221_crypto_buff_address0, grp_enc_fu_241_crypto_buff_address0, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            crypto_buff_address0 <= grp_enc_fu_241_crypto_buff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            crypto_buff_address0 <= grp_dec_fu_221_crypto_buff_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            crypto_buff_address0 <= grp_example_Pipeline_4_fu_206_crypto_buff_address0;
        else 
            crypto_buff_address0 <= "XXXXXXX";
        end if; 
    end process;


    crypto_buff_ce0_assign_proc : process(grp_example_Pipeline_4_fu_206_crypto_buff_ce0, grp_dec_fu_221_crypto_buff_ce0, grp_enc_fu_241_crypto_buff_ce0, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            crypto_buff_ce0 <= grp_enc_fu_241_crypto_buff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            crypto_buff_ce0 <= grp_dec_fu_221_crypto_buff_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            crypto_buff_ce0 <= grp_example_Pipeline_4_fu_206_crypto_buff_ce0;
        else 
            crypto_buff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    crypto_buff_we0_assign_proc : process(grp_example_Pipeline_4_fu_206_crypto_buff_we0, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            crypto_buff_we0 <= grp_example_Pipeline_4_fu_206_crypto_buff_we0;
        else 
            crypto_buff_we0 <= (0=>ap_const_logic_0, others=>'-');
        end if; 
    end process;


    ct_address0_assign_proc : process(grp_enc_fu_241_ct_address0, grp_example_Pipeline_7_fu_253_ct_address0, ap_CS_fsm_state41, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            ct_address0 <= grp_example_Pipeline_7_fu_253_ct_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ct_address0 <= grp_enc_fu_241_ct_address0;
        else 
            ct_address0 <= "XXXXXXX";
        end if; 
    end process;


    ct_ce0_assign_proc : process(grp_enc_fu_241_ct_ce0, grp_example_Pipeline_7_fu_253_ct_ce0, ap_CS_fsm_state41, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            ct_ce0 <= grp_example_Pipeline_7_fu_253_ct_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ct_ce0 <= grp_enc_fu_241_ct_ce0;
        else 
            ct_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ct_we0_assign_proc : process(grp_enc_fu_241_ct_we0, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            ct_we0 <= grp_enc_fu_241_ct_we0;
        else 
            ct_we0 <= ap_const_logic_0;
        end if; 
    end process;


    gmem_ARADDR_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state29, grp_example_Pipeline_1_fu_182_m_axi_gmem_ARADDR, grp_example_Pipeline_2_fu_190_m_axi_gmem_ARADDR, grp_example_Pipeline_3_fu_198_m_axi_gmem_ARADDR, grp_example_Pipeline_4_fu_206_m_axi_gmem_ARADDR, gmem_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state36, ap_CS_fsm_state37, sext_ln194_fu_309_p1, sext_ln195_fu_319_p1, sext_ln196_fu_329_p1, sext_ln199_fu_339_p1)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            gmem_ARADDR <= sext_ln199_fu_339_p1;
        elsif (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            gmem_ARADDR <= sext_ln196_fu_329_p1;
        elsif (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            gmem_ARADDR <= sext_ln195_fu_319_p1;
        elsif (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_ARADDR <= sext_ln194_fu_309_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            gmem_ARADDR <= grp_example_Pipeline_4_fu_206_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            gmem_ARADDR <= grp_example_Pipeline_3_fu_198_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            gmem_ARADDR <= grp_example_Pipeline_2_fu_190_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem_ARADDR <= grp_example_Pipeline_1_fu_182_m_axi_gmem_ARADDR;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARLEN_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state29, grp_example_Pipeline_1_fu_182_m_axi_gmem_ARLEN, grp_example_Pipeline_2_fu_190_m_axi_gmem_ARLEN, grp_example_Pipeline_3_fu_198_m_axi_gmem_ARLEN, grp_example_Pipeline_4_fu_206_m_axi_gmem_ARLEN, gmem_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state36, ap_CS_fsm_state37)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            gmem_ARLEN <= ap_const_lv32_80;
        elsif ((((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            gmem_ARLEN <= ap_const_lv32_2710;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            gmem_ARLEN <= grp_example_Pipeline_4_fu_206_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            gmem_ARLEN <= grp_example_Pipeline_3_fu_198_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            gmem_ARLEN <= grp_example_Pipeline_2_fu_190_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem_ARLEN <= grp_example_Pipeline_1_fu_182_m_axi_gmem_ARLEN;
        else 
            gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state29, grp_example_Pipeline_1_fu_182_m_axi_gmem_ARVALID, grp_example_Pipeline_2_fu_190_m_axi_gmem_ARVALID, grp_example_Pipeline_3_fu_198_m_axi_gmem_ARVALID, grp_example_Pipeline_4_fu_206_m_axi_gmem_ARVALID, gmem_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state36, ap_CS_fsm_state37)
    begin
        if ((((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            gmem_ARVALID <= grp_example_Pipeline_4_fu_206_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            gmem_ARVALID <= grp_example_Pipeline_3_fu_198_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            gmem_ARVALID <= grp_example_Pipeline_2_fu_190_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem_ARVALID <= grp_example_Pipeline_1_fu_182_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_AWADDR_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state38, ap_CS_fsm_state42, gmem_addr_2_reg_386, gmem_addr_3_reg_391, grp_example_Pipeline_5_fu_233_m_axi_gmem_AWADDR, grp_example_Pipeline_7_fu_253_m_axi_gmem_AWADDR, grp_example_Pipeline_8_fu_261_m_axi_gmem_AWADDR, gmem_AWREADY, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state55)
    begin
        if ((((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            gmem_AWADDR <= gmem_addr_3_reg_391;
        elsif (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            gmem_AWADDR <= gmem_addr_2_reg_386;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            gmem_AWADDR <= grp_example_Pipeline_8_fu_261_m_axi_gmem_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            gmem_AWADDR <= grp_example_Pipeline_7_fu_253_m_axi_gmem_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            gmem_AWADDR <= grp_example_Pipeline_5_fu_233_m_axi_gmem_AWADDR;
        else 
            gmem_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWLEN_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state38, ap_CS_fsm_state42, grp_example_Pipeline_5_fu_233_m_axi_gmem_AWLEN, grp_example_Pipeline_7_fu_253_m_axi_gmem_AWLEN, grp_example_Pipeline_8_fu_261_m_axi_gmem_AWLEN, gmem_AWREADY, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state55)
    begin
        if ((((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            gmem_AWLEN <= ap_const_lv32_80;
        elsif (((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            gmem_AWLEN <= ap_const_lv32_2710;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            gmem_AWLEN <= grp_example_Pipeline_8_fu_261_m_axi_gmem_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            gmem_AWLEN <= grp_example_Pipeline_7_fu_253_m_axi_gmem_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            gmem_AWLEN <= grp_example_Pipeline_5_fu_233_m_axi_gmem_AWLEN;
        else 
            gmem_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_AWVALID_assign_proc : process(ap_CS_fsm_state49, ap_CS_fsm_state38, ap_CS_fsm_state42, grp_example_Pipeline_5_fu_233_m_axi_gmem_AWVALID, grp_example_Pipeline_7_fu_253_m_axi_gmem_AWVALID, grp_example_Pipeline_8_fu_261_m_axi_gmem_AWVALID, gmem_AWREADY, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state55)
    begin
        if ((((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((gmem_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state49)))) then 
            gmem_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            gmem_AWVALID <= grp_example_Pipeline_8_fu_261_m_axi_gmem_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            gmem_AWVALID <= grp_example_Pipeline_7_fu_253_m_axi_gmem_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            gmem_AWVALID <= grp_example_Pipeline_5_fu_233_m_axi_gmem_AWVALID;
        else 
            gmem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_BREADY_assign_proc : process(ap_CS_fsm_state60, ap_CS_fsm_state46, ap_CS_fsm_state53, grp_example_Pipeline_5_fu_233_m_axi_gmem_BREADY, grp_example_Pipeline_7_fu_253_m_axi_gmem_BREADY, grp_example_Pipeline_8_fu_261_m_axi_gmem_BREADY, gmem_BVALID, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state55)
    begin
        if ((((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state53)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state46)) or ((gmem_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state60)))) then 
            gmem_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            gmem_BREADY <= grp_example_Pipeline_8_fu_261_m_axi_gmem_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            gmem_BREADY <= grp_example_Pipeline_7_fu_253_m_axi_gmem_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            gmem_BREADY <= grp_example_Pipeline_5_fu_233_m_axi_gmem_BREADY;
        else 
            gmem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(grp_example_Pipeline_1_fu_182_m_axi_gmem_RREADY, grp_example_Pipeline_2_fu_190_m_axi_gmem_RREADY, grp_example_Pipeline_3_fu_198_m_axi_gmem_RREADY, grp_example_Pipeline_4_fu_206_m_axi_gmem_RREADY, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state36, ap_CS_fsm_state37)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            gmem_RREADY <= grp_example_Pipeline_4_fu_206_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            gmem_RREADY <= grp_example_Pipeline_3_fu_198_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            gmem_RREADY <= grp_example_Pipeline_2_fu_190_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            gmem_RREADY <= grp_example_Pipeline_1_fu_182_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_WDATA_assign_proc : process(grp_example_Pipeline_5_fu_233_m_axi_gmem_WDATA, grp_example_Pipeline_7_fu_253_m_axi_gmem_WDATA, grp_example_Pipeline_8_fu_261_m_axi_gmem_WDATA, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state55)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            gmem_WDATA <= grp_example_Pipeline_8_fu_261_m_axi_gmem_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            gmem_WDATA <= grp_example_Pipeline_7_fu_253_m_axi_gmem_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            gmem_WDATA <= grp_example_Pipeline_5_fu_233_m_axi_gmem_WDATA;
        else 
            gmem_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_WSTRB_assign_proc : process(grp_example_Pipeline_5_fu_233_m_axi_gmem_WSTRB, grp_example_Pipeline_7_fu_253_m_axi_gmem_WSTRB, grp_example_Pipeline_8_fu_261_m_axi_gmem_WSTRB, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state55)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            gmem_WSTRB <= grp_example_Pipeline_8_fu_261_m_axi_gmem_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            gmem_WSTRB <= grp_example_Pipeline_7_fu_253_m_axi_gmem_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            gmem_WSTRB <= grp_example_Pipeline_5_fu_233_m_axi_gmem_WSTRB;
        else 
            gmem_WSTRB <= "XXXX";
        end if; 
    end process;


    gmem_WVALID_assign_proc : process(grp_example_Pipeline_5_fu_233_m_axi_gmem_WVALID, grp_example_Pipeline_7_fu_253_m_axi_gmem_WVALID, grp_example_Pipeline_8_fu_261_m_axi_gmem_WVALID, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state54, ap_CS_fsm_state55)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state54))) then 
            gmem_WVALID <= grp_example_Pipeline_8_fu_261_m_axi_gmem_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47))) then 
            gmem_WVALID <= grp_example_Pipeline_7_fu_253_m_axi_gmem_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            gmem_WVALID <= grp_example_Pipeline_5_fu_233_m_axi_gmem_WVALID;
        else 
            gmem_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_AWREADY, ap_CS_fsm_state49, ap_CS_fsm_state38, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state49))) then 
            gmem_blk_n_AW <= m_axi_gmem_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_BVALID, ap_CS_fsm_state60, ap_CS_fsm_state46, ap_CS_fsm_state53)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state60))) then 
            gmem_blk_n_B <= m_axi_gmem_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    grp_dec_fu_221_ap_start <= grp_dec_fu_221_ap_start_reg;
    grp_enc_fu_241_ap_start <= grp_enc_fu_241_ap_start_reg;
    grp_example_Pipeline_1_fu_182_ap_start <= grp_example_Pipeline_1_fu_182_ap_start_reg;
    grp_example_Pipeline_2_fu_190_ap_start <= grp_example_Pipeline_2_fu_190_ap_start_reg;
    grp_example_Pipeline_3_fu_198_ap_start <= grp_example_Pipeline_3_fu_198_ap_start_reg;
    grp_example_Pipeline_4_fu_206_ap_start <= grp_example_Pipeline_4_fu_206_ap_start_reg;
    grp_example_Pipeline_5_fu_233_ap_start <= grp_example_Pipeline_5_fu_233_ap_start_reg;
    grp_example_Pipeline_7_fu_253_ap_start <= grp_example_Pipeline_7_fu_253_ap_start_reg;
    grp_example_Pipeline_8_fu_261_ap_start <= grp_example_Pipeline_8_fu_261_ap_start_reg;
    grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_start <= grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_ap_start_reg;

    pt_address0_assign_proc : process(grp_dec_fu_221_pt_address0, grp_example_Pipeline_5_fu_233_pt_address0, ap_CS_fsm_state39, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            pt_address0 <= grp_example_Pipeline_5_fu_233_pt_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            pt_address0 <= grp_dec_fu_221_pt_address0;
        else 
            pt_address0 <= "XXXXXXX";
        end if; 
    end process;


    pt_ce0_assign_proc : process(grp_dec_fu_221_pt_ce0, grp_example_Pipeline_5_fu_233_pt_ce0, ap_CS_fsm_state39, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            pt_ce0 <= grp_example_Pipeline_5_fu_233_pt_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            pt_ce0 <= grp_dec_fu_221_pt_ce0;
        else 
            pt_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pt_we0_assign_proc : process(grp_dec_fu_221_pt_we0, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            pt_we0 <= grp_dec_fu_221_pt_we0;
        else 
            pt_we0 <= ap_const_logic_0;
        end if; 
    end process;


    res_address0_assign_proc : process(grp_example_Pipeline_3_fu_198_res_address0, grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_address0, grp_example_Pipeline_8_fu_261_res_address0, ap_CS_fsm_state28, ap_CS_fsm_state37, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            res_address0 <= grp_example_Pipeline_8_fu_261_res_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            res_address0 <= grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            res_address0 <= grp_example_Pipeline_3_fu_198_res_address0;
        else 
            res_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    res_ce0_assign_proc : process(grp_example_Pipeline_3_fu_198_res_ce0, grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_ce0, grp_example_Pipeline_8_fu_261_res_ce0, ap_CS_fsm_state28, ap_CS_fsm_state37, ap_CS_fsm_state55)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            res_ce0 <= grp_example_Pipeline_8_fu_261_res_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            res_ce0 <= grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            res_ce0 <= grp_example_Pipeline_3_fu_198_res_ce0;
        else 
            res_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    res_d0_assign_proc : process(grp_example_Pipeline_3_fu_198_res_d0, grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_d0, ap_CS_fsm_state28, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            res_d0 <= grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            res_d0 <= grp_example_Pipeline_3_fu_198_res_d0;
        else 
            res_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_we0_assign_proc : process(grp_example_Pipeline_3_fu_198_res_we0, grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_we0, ap_CS_fsm_state28, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            res_we0 <= grp_example_Pipeline_VITIS_LOOP_158_1_VITIS_LOOP_159_2_VITIS_LOOP_161_3_fu_214_res_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            res_we0 <= grp_example_Pipeline_3_fu_198_res_we0;
        else 
            res_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln194_fu_309_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_349),64));

        sext_ln195_fu_319_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_355),64));

        sext_ln196_fu_329_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_361),64));

        sext_ln199_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_reg_368),64));

end behav;
