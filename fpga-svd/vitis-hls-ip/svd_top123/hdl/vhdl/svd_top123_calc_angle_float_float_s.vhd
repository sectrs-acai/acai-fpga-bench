-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity svd_top123_calc_angle_float_float_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    A_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    A_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of svd_top123_calc_angle_float_float_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3F3504F3 : STD_LOGIC_VECTOR (31 downto 0) := "00111111001101010000010011110011";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_18 : STD_LOGIC_VECTOR (8 downto 0) := "000011000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_3F800000 : STD_LOGIC_VECTOR (30 downto 0) := "0111111100000000000000000000000";
    constant ap_const_lv32_BF3504F3 : STD_LOGIC_VECTOR (31 downto 0) := "10111111001101010000010011110011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state16_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state32_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tanThetaAdiv2_2_reg_48 : STD_LOGIC_VECTOR (31 downto 0);
    signal tanThetaAdiv2_2_reg_48_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tanThetaAdiv2_2_reg_48_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_82_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_111 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal or_ln106_reg_290 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_reg_290_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_reg_344 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_117 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state31_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal or_ln106_reg_290_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_4_reg_344_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_fu_177_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_reg_290_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_reg_290_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_reg_290_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_reg_290_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_reg_290_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_reg_290_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_reg_290_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_294_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln106_1_reg_301_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_305_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tanThetaA_reg_310 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state30_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tanThetaA_reg_310_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tanThetaA_reg_310_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tanThetaA_reg_310_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_88_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_317 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_322 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_106_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_327 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln351_fu_230_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosThetaA_int_reg_337 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_reg_344_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_92_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sinThetaA_int_reg_348 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul3_reg_354 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_2_reg_359 : STD_LOGIC_VECTOR (31 downto 0);
    signal cosThetaAdiv2_int_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln244_fu_247_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln228_fu_254_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln228_1_fu_261_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_phi_mux_tanThetaAdiv2_2_phi_fu_51_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_tanThetaAdiv2_2_reg_48 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_cosThetaAdiv2_write_assign_phi_fu_61_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_cosThetaAdiv2_write_assign_reg_58 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_sinThetaAdiv2_write_assign_phi_fu_73_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter9_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter2_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter3_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter4_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter5_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter6_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter7_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter8_sinThetaAdiv2_write_assign_reg_69 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_82_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_82_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal grp_fu_88_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_88_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal grp_fu_100_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_fu_123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_2_fu_137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_141_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1346_fu_151_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_29_fu_127_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_fu_155_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln106_fu_161_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln106_fu_165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_1_fu_171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_1_fu_191_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln106_2_fu_197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln106_3_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_3_fu_223_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_V_3_fu_235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_82_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal grp_fu_82_ce : STD_LOGIC;
    signal grp_fu_88_ce : STD_LOGIC;
    signal grp_fu_92_ce : STD_LOGIC;
    signal grp_fu_100_ce : STD_LOGIC;
    signal grp_fu_106_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to9 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0_0to8 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_398 : BOOLEAN;
    signal ap_condition_804 : BOOLEAN;
    signal ap_condition_809 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component svd_top123_faddfsub_32ns_32ns_32_3_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component svd_top123_fmul_32ns_32ns_32_2_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component svd_top123_fdiv_32ns_32ns_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component svd_top123_frsqrt_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    faddfsub_32ns_32ns_32_3_full_dsp_1_U1 : component svd_top123_faddfsub_32ns_32ns_32_3_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_82_p0,
        din1 => grp_fu_82_p1,
        opcode => grp_fu_82_opcode,
        ce => grp_fu_82_ce,
        dout => grp_fu_82_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U2 : component svd_top123_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_88_p0,
        din1 => grp_fu_88_p1,
        ce => grp_fu_88_ce,
        dout => grp_fu_88_p2);

    fmul_32ns_32ns_32_2_max_dsp_1_U3 : component svd_top123_fmul_32ns_32ns_32_2_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => cosThetaA_int_reg_337,
        din1 => tanThetaA_reg_310_pp0_iter4_reg,
        ce => grp_fu_92_ce,
        dout => grp_fu_92_p2);

    fdiv_32ns_32ns_32_6_no_dsp_1_U4 : component svd_top123_fdiv_32ns_32ns_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_100_p0,
        din1 => grp_fu_100_p1,
        ce => grp_fu_100_ce,
        dout => grp_fu_100_p2);

    frsqrt_32ns_32ns_32_5_full_dsp_1_U5 : component svd_top123_frsqrt_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => grp_fu_106_p1,
        ce => grp_fu_106_ce,
        dout => grp_fu_106_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter9_cosThetaAdiv2_write_assign_reg_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_809)) then 
                    ap_phi_reg_pp0_iter9_cosThetaAdiv2_write_assign_reg_58 <= select_ln244_fu_247_p3;
                elsif ((ap_const_boolean_1 = ap_condition_804)) then 
                    ap_phi_reg_pp0_iter9_cosThetaAdiv2_write_assign_reg_58 <= select_ln228_fu_254_p3;
                elsif ((ap_const_boolean_1 = ap_condition_398)) then 
                    ap_phi_reg_pp0_iter9_cosThetaAdiv2_write_assign_reg_58 <= ap_phi_reg_pp0_iter8_cosThetaAdiv2_write_assign_reg_58;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter9_sinThetaAdiv2_write_assign_reg_69_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                if ((ap_const_boolean_1 = ap_condition_809)) then 
                    ap_phi_reg_pp0_iter9_sinThetaAdiv2_write_assign_reg_69 <= ap_const_lv32_3F3504F3;
                elsif ((ap_const_boolean_1 = ap_condition_804)) then 
                    ap_phi_reg_pp0_iter9_sinThetaAdiv2_write_assign_reg_69 <= select_ln228_1_fu_261_p3;
                elsif ((ap_const_boolean_1 = ap_condition_398)) then 
                    ap_phi_reg_pp0_iter9_sinThetaAdiv2_write_assign_reg_69 <= ap_phi_reg_pp0_iter8_sinThetaAdiv2_write_assign_reg_69;
                end if;
            end if; 
        end if;
    end process;

    tanThetaAdiv2_2_reg_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (p_Result_4_reg_344_pp0_iter6_reg = ap_const_lv1_1) and (or_ln106_1_reg_301_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (p_Result_4_reg_344_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_1_reg_301_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter6_reg = ap_const_lv1_0)))) then 
                tanThetaAdiv2_2_reg_48 <= reg_117;
            elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                tanThetaAdiv2_2_reg_48 <= ap_phi_reg_pp0_iter6_tanThetaAdiv2_2_reg_48;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter1_cosThetaAdiv2_write_assign_reg_58 <= ap_phi_reg_pp0_iter0_cosThetaAdiv2_write_assign_reg_58;
                ap_phi_reg_pp0_iter1_sinThetaAdiv2_write_assign_reg_69 <= ap_phi_reg_pp0_iter0_sinThetaAdiv2_write_assign_reg_69;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter2_cosThetaAdiv2_write_assign_reg_58 <= ap_phi_reg_pp0_iter1_cosThetaAdiv2_write_assign_reg_58;
                ap_phi_reg_pp0_iter2_sinThetaAdiv2_write_assign_reg_69 <= ap_phi_reg_pp0_iter1_sinThetaAdiv2_write_assign_reg_69;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter3_cosThetaAdiv2_write_assign_reg_58 <= ap_phi_reg_pp0_iter2_cosThetaAdiv2_write_assign_reg_58;
                ap_phi_reg_pp0_iter3_sinThetaAdiv2_write_assign_reg_69 <= ap_phi_reg_pp0_iter2_sinThetaAdiv2_write_assign_reg_69;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter4_cosThetaAdiv2_write_assign_reg_58 <= ap_phi_reg_pp0_iter3_cosThetaAdiv2_write_assign_reg_58;
                ap_phi_reg_pp0_iter4_sinThetaAdiv2_write_assign_reg_69 <= ap_phi_reg_pp0_iter3_sinThetaAdiv2_write_assign_reg_69;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter5_cosThetaAdiv2_write_assign_reg_58 <= ap_phi_reg_pp0_iter4_cosThetaAdiv2_write_assign_reg_58;
                ap_phi_reg_pp0_iter5_sinThetaAdiv2_write_assign_reg_69 <= ap_phi_reg_pp0_iter4_sinThetaAdiv2_write_assign_reg_69;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter6_cosThetaAdiv2_write_assign_reg_58 <= ap_phi_reg_pp0_iter5_cosThetaAdiv2_write_assign_reg_58;
                ap_phi_reg_pp0_iter6_sinThetaAdiv2_write_assign_reg_69 <= ap_phi_reg_pp0_iter5_sinThetaAdiv2_write_assign_reg_69;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter7_cosThetaAdiv2_write_assign_reg_58 <= ap_phi_reg_pp0_iter6_cosThetaAdiv2_write_assign_reg_58;
                ap_phi_reg_pp0_iter7_sinThetaAdiv2_write_assign_reg_69 <= ap_phi_reg_pp0_iter6_sinThetaAdiv2_write_assign_reg_69;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ap_phi_reg_pp0_iter8_cosThetaAdiv2_write_assign_reg_58 <= ap_phi_reg_pp0_iter7_cosThetaAdiv2_write_assign_reg_58;
                ap_phi_reg_pp0_iter8_sinThetaAdiv2_write_assign_reg_69 <= ap_phi_reg_pp0_iter7_sinThetaAdiv2_write_assign_reg_69;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0))) then
                cosThetaA_int_reg_337 <= grp_fu_88_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln106_1_reg_301_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln106_reg_290_pp0_iter8_reg = ap_const_lv1_0))) then
                cosThetaAdiv2_int_reg_364 <= grp_fu_106_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln106_1_reg_301_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter6_reg = ap_const_lv1_0))) then
                mul3_reg_354 <= grp_fu_88_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (or_ln106_1_reg_301_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (or_ln106_reg_290_pp0_iter1_reg = ap_const_lv1_0))) then
                mul_reg_317 <= grp_fu_88_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln106_fu_177_p2 = ap_const_lv1_0))) then
                or_ln106_1_reg_301 <= or_ln106_1_fu_209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                or_ln106_1_reg_301_pp0_iter1_reg <= or_ln106_1_reg_301;
                or_ln106_1_reg_301_pp0_iter2_reg <= or_ln106_1_reg_301_pp0_iter1_reg;
                or_ln106_1_reg_301_pp0_iter3_reg <= or_ln106_1_reg_301_pp0_iter2_reg;
                or_ln106_1_reg_301_pp0_iter4_reg <= or_ln106_1_reg_301_pp0_iter3_reg;
                or_ln106_1_reg_301_pp0_iter5_reg <= or_ln106_1_reg_301_pp0_iter4_reg;
                or_ln106_1_reg_301_pp0_iter6_reg <= or_ln106_1_reg_301_pp0_iter5_reg;
                or_ln106_1_reg_301_pp0_iter7_reg <= or_ln106_1_reg_301_pp0_iter6_reg;
                or_ln106_1_reg_301_pp0_iter8_reg <= or_ln106_1_reg_301_pp0_iter7_reg;
                or_ln106_1_reg_301_pp0_iter9_reg <= or_ln106_1_reg_301_pp0_iter8_reg;
                or_ln106_reg_290 <= or_ln106_fu_177_p2;
                or_ln106_reg_290_pp0_iter1_reg <= or_ln106_reg_290;
                or_ln106_reg_290_pp0_iter2_reg <= or_ln106_reg_290_pp0_iter1_reg;
                or_ln106_reg_290_pp0_iter3_reg <= or_ln106_reg_290_pp0_iter2_reg;
                or_ln106_reg_290_pp0_iter4_reg <= or_ln106_reg_290_pp0_iter3_reg;
                or_ln106_reg_290_pp0_iter5_reg <= or_ln106_reg_290_pp0_iter4_reg;
                or_ln106_reg_290_pp0_iter6_reg <= or_ln106_reg_290_pp0_iter5_reg;
                or_ln106_reg_290_pp0_iter7_reg <= or_ln106_reg_290_pp0_iter6_reg;
                or_ln106_reg_290_pp0_iter8_reg <= or_ln106_reg_290_pp0_iter7_reg;
                or_ln106_reg_290_pp0_iter9_reg <= or_ln106_reg_290_pp0_iter8_reg;
                p_Result_2_reg_305_pp0_iter1_reg <= p_Result_2_reg_305;
                p_Result_2_reg_305_pp0_iter2_reg <= p_Result_2_reg_305_pp0_iter1_reg;
                p_Result_2_reg_305_pp0_iter3_reg <= p_Result_2_reg_305_pp0_iter2_reg;
                p_Result_2_reg_305_pp0_iter4_reg <= p_Result_2_reg_305_pp0_iter3_reg;
                p_Result_2_reg_305_pp0_iter5_reg <= p_Result_2_reg_305_pp0_iter4_reg;
                p_Result_2_reg_305_pp0_iter6_reg <= p_Result_2_reg_305_pp0_iter5_reg;
                p_Result_2_reg_305_pp0_iter7_reg <= p_Result_2_reg_305_pp0_iter6_reg;
                p_Result_2_reg_305_pp0_iter8_reg <= p_Result_2_reg_305_pp0_iter7_reg;
                p_Result_2_reg_305_pp0_iter9_reg <= p_Result_2_reg_305_pp0_iter8_reg;
                p_Result_s_reg_294 <= data_V_fu_123_p1(31 downto 31);
                p_Result_s_reg_294_pp0_iter1_reg <= p_Result_s_reg_294;
                p_Result_s_reg_294_pp0_iter2_reg <= p_Result_s_reg_294_pp0_iter1_reg;
                p_Result_s_reg_294_pp0_iter3_reg <= p_Result_s_reg_294_pp0_iter2_reg;
                p_Result_s_reg_294_pp0_iter4_reg <= p_Result_s_reg_294_pp0_iter3_reg;
                p_Result_s_reg_294_pp0_iter5_reg <= p_Result_s_reg_294_pp0_iter4_reg;
                p_Result_s_reg_294_pp0_iter6_reg <= p_Result_s_reg_294_pp0_iter5_reg;
                p_Result_s_reg_294_pp0_iter7_reg <= p_Result_s_reg_294_pp0_iter6_reg;
                p_Result_s_reg_294_pp0_iter8_reg <= p_Result_s_reg_294_pp0_iter7_reg;
                p_Result_s_reg_294_pp0_iter9_reg <= p_Result_s_reg_294_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (or_ln106_1_fu_209_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln106_fu_177_p2 = ap_const_lv1_0))) then
                p_Result_2_reg_305 <= data_V_2_fu_137_p1(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0))) then
                p_Result_4_reg_344 <= data_V_3_fu_235_p1(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                p_Result_4_reg_344_pp0_iter5_reg <= p_Result_4_reg_344;
                p_Result_4_reg_344_pp0_iter6_reg <= p_Result_4_reg_344_pp0_iter5_reg;
                tanThetaA_reg_310_pp0_iter2_reg <= tanThetaA_reg_310;
                tanThetaA_reg_310_pp0_iter3_reg <= tanThetaA_reg_310_pp0_iter2_reg;
                tanThetaA_reg_310_pp0_iter4_reg <= tanThetaA_reg_310_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (p_Result_4_reg_344 = ap_const_lv1_1) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (p_Result_4_reg_344 = ap_const_lv1_0) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0)))) then
                reg_111 <= grp_fu_82_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_4_reg_344_pp0_iter6_reg = ap_const_lv1_1) and (or_ln106_1_reg_301_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter6_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_4_reg_344_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_1_reg_301_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter6_reg = ap_const_lv1_0)))) then
                reg_117 <= grp_fu_100_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0))) then
                sinThetaA_int_reg_348 <= grp_fu_92_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_ln106_1_reg_301_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_reg_290_pp0_iter1_reg = ap_const_lv1_0))) then
                tanThetaA_reg_310 <= grp_fu_100_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tanThetaAdiv2_2_reg_48_pp0_iter7_reg <= tanThetaAdiv2_2_reg_48;
                tanThetaAdiv2_2_reg_48_pp0_iter8_reg <= tanThetaAdiv2_2_reg_48_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (or_ln106_1_reg_301_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (or_ln106_reg_290_pp0_iter3_reg = ap_const_lv1_0))) then
                tmp_reg_327 <= grp_fu_106_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (or_ln106_1_reg_301_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (or_ln106_reg_290_pp0_iter7_reg = ap_const_lv1_0))) then
                x_assign_2_reg_359 <= grp_fu_82_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (or_ln106_1_reg_301_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (or_ln106_reg_290_pp0_iter2_reg = ap_const_lv1_0))) then
                x_assign_reg_322 <= grp_fu_82_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage3_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to9, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to9 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage2_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage3_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state10_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_398_assign_proc : process(ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
                ap_condition_398 <= ((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3));
    end process;


    ap_condition_804_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln106_reg_290_pp0_iter9_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_804 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_reg_290_pp0_iter9_reg = ap_const_lv1_1));
    end process;


    ap_condition_809_assign_proc : process(ap_enable_reg_pp0_iter9, or_ln106_reg_290_pp0_iter9_reg, or_ln106_1_reg_301_pp0_iter9_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_809 <= ((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (or_ln106_1_reg_301_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_reg_290_pp0_iter9_reg = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter9, ap_ce, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if ((((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to9_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_cosThetaAdiv2_write_assign_phi_fu_61_p6_assign_proc : process(or_ln106_reg_290_pp0_iter9_reg, or_ln106_1_reg_301_pp0_iter9_reg, cosThetaAdiv2_int_reg_364, ap_phi_reg_pp0_iter9_cosThetaAdiv2_write_assign_reg_58)
    begin
        if (((or_ln106_1_reg_301_pp0_iter9_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter9_reg = ap_const_lv1_0))) then 
            ap_phi_mux_cosThetaAdiv2_write_assign_phi_fu_61_p6 <= cosThetaAdiv2_int_reg_364;
        else 
            ap_phi_mux_cosThetaAdiv2_write_assign_phi_fu_61_p6 <= ap_phi_reg_pp0_iter9_cosThetaAdiv2_write_assign_reg_58;
        end if; 
    end process;


    ap_phi_mux_sinThetaAdiv2_write_assign_phi_fu_73_p6_assign_proc : process(or_ln106_reg_290_pp0_iter9_reg, or_ln106_1_reg_301_pp0_iter9_reg, grp_fu_88_p2, ap_phi_reg_pp0_iter9_sinThetaAdiv2_write_assign_reg_69)
    begin
        if (((or_ln106_1_reg_301_pp0_iter9_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter9_reg = ap_const_lv1_0))) then 
            ap_phi_mux_sinThetaAdiv2_write_assign_phi_fu_73_p6 <= grp_fu_88_p2;
        else 
            ap_phi_mux_sinThetaAdiv2_write_assign_phi_fu_73_p6 <= ap_phi_reg_pp0_iter9_sinThetaAdiv2_write_assign_reg_69;
        end if; 
    end process;


    ap_phi_mux_tanThetaAdiv2_2_phi_fu_51_p4_assign_proc : process(reg_117, or_ln106_reg_290_pp0_iter6_reg, or_ln106_1_reg_301_pp0_iter6_reg, p_Result_4_reg_344_pp0_iter6_reg, ap_phi_reg_pp0_iter6_tanThetaAdiv2_2_reg_48)
    begin
        if ((((p_Result_4_reg_344_pp0_iter6_reg = ap_const_lv1_1) and (or_ln106_1_reg_301_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter6_reg = ap_const_lv1_0)) or ((p_Result_4_reg_344_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_1_reg_301_pp0_iter6_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter6_reg = ap_const_lv1_0)))) then 
            ap_phi_mux_tanThetaAdiv2_2_phi_fu_51_p4 <= reg_117;
        else 
            ap_phi_mux_tanThetaAdiv2_2_phi_fu_51_p4 <= ap_phi_reg_pp0_iter6_tanThetaAdiv2_2_reg_48;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_cosThetaAdiv2_write_assign_reg_58 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_sinThetaAdiv2_write_assign_reg_69 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter6_tanThetaAdiv2_2_reg_48 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to8)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= ap_phi_mux_cosThetaAdiv2_write_assign_phi_fu_61_p6;
    ap_return_1 <= ap_phi_mux_sinThetaAdiv2_write_assign_phi_fu_73_p6;
    bitcast_ln351_fu_230_p1 <= p_Result_3_fu_223_p3;
    data_V_2_fu_137_p1 <= A_1;
    data_V_3_fu_235_p1 <= grp_fu_88_p2;
    data_V_fu_123_p1 <= A_0;

    grp_fu_100_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_100_ce <= ap_const_logic_1;
        else 
            grp_fu_100_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_100_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, A_1, reg_111, p_Result_4_reg_344, or_ln106_reg_290_pp0_iter5_reg, or_ln106_1_reg_301_pp0_iter5_reg, ap_CS_fsm_pp0_stage1, sinThetaA_int_reg_348, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (or_ln106_1_reg_301_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_reg_290_pp0_iter5_reg = ap_const_lv1_0) and (p_Result_4_reg_344 = ap_const_lv1_1))) then 
            grp_fu_100_p0 <= reg_111;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (or_ln106_1_reg_301_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_reg_290_pp0_iter5_reg = ap_const_lv1_0) and (p_Result_4_reg_344 = ap_const_lv1_0))) then 
            grp_fu_100_p0 <= sinThetaA_int_reg_348;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_100_p0 <= A_1;
        else 
            grp_fu_100_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_100_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, A_0, reg_111, p_Result_4_reg_344, or_ln106_reg_290_pp0_iter5_reg, or_ln106_1_reg_301_pp0_iter5_reg, ap_CS_fsm_pp0_stage1, sinThetaA_int_reg_348, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (or_ln106_1_reg_301_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_reg_290_pp0_iter5_reg = ap_const_lv1_0) and (p_Result_4_reg_344 = ap_const_lv1_1))) then 
            grp_fu_100_p1 <= sinThetaA_int_reg_348;
        elsif (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (or_ln106_1_reg_301_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_reg_290_pp0_iter5_reg = ap_const_lv1_0) and (p_Result_4_reg_344 = ap_const_lv1_0))) then 
            grp_fu_100_p1 <= reg_111;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_100_p1 <= A_0;
        else 
            grp_fu_100_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_106_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_106_ce <= ap_const_logic_1;
        else 
            grp_fu_106_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_106_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage3, x_assign_reg_322, x_assign_2_reg_359, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_106_p1 <= x_assign_2_reg_359;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_106_p1 <= x_assign_reg_322;
        else 
            grp_fu_106_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_82_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_82_ce <= ap_const_logic_1;
        else 
            grp_fu_82_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_82_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, or_ln106_reg_290_pp0_iter4_reg, or_ln106_1_reg_301_pp0_iter4_reg, p_Result_4_reg_344, ap_CS_fsm_pp0_stage2, or_ln106_reg_290_pp0_iter1_reg, or_ln106_reg_290_pp0_iter7_reg, or_ln106_1_reg_301_pp0_iter1_reg, or_ln106_1_reg_301_pp0_iter7_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_00001, ap_block_pp0_stage2_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_4_reg_344 = ap_const_lv1_1) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0))) then 
            grp_fu_82_opcode <= ap_const_lv2_1;
        elsif ((((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (or_ln106_1_reg_301_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (or_ln106_reg_290_pp0_iter7_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_4_reg_344 = ap_const_lv1_0) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (or_ln106_1_reg_301_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_ln106_reg_290_pp0_iter1_reg = ap_const_lv1_0)))) then 
            grp_fu_82_opcode <= ap_const_lv2_0;
        else 
            grp_fu_82_opcode <= "XX";
        end if; 
    end process;


    grp_fu_82_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, or_ln106_reg_290_pp0_iter4_reg, or_ln106_1_reg_301_pp0_iter4_reg, p_Result_4_reg_344, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, mul_reg_317, cosThetaA_int_reg_337, mul3_reg_354, ap_block_pp0_stage2, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_82_p0 <= mul3_reg_354;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_4_reg_344 = ap_const_lv1_1) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0))) then 
            grp_fu_82_p0 <= ap_const_lv32_3F800000;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_4_reg_344 = ap_const_lv1_0) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0))) then 
            grp_fu_82_p0 <= cosThetaA_int_reg_337;
        elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_82_p0 <= mul_reg_317;
        else 
            grp_fu_82_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_82_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter7, or_ln106_reg_290_pp0_iter4_reg, or_ln106_1_reg_301_pp0_iter4_reg, p_Result_4_reg_344, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, cosThetaA_int_reg_337, ap_block_pp0_stage2, ap_block_pp0_stage1)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_4_reg_344 = ap_const_lv1_1) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0))) then 
            grp_fu_82_p1 <= cosThetaA_int_reg_337;
        elsif ((((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (p_Result_4_reg_344 = ap_const_lv1_0) and (or_ln106_1_reg_301_pp0_iter4_reg = ap_const_lv1_0) and (or_ln106_reg_290_pp0_iter4_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_82_p1 <= ap_const_lv32_3F800000;
        else 
            grp_fu_82_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_88_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_88_ce <= ap_const_logic_1;
        else 
            grp_fu_88_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_88_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage2, tanThetaA_reg_310, ap_CS_fsm_pp0_stage1, bitcast_ln351_fu_230_p1, cosThetaAdiv2_int_reg_364, ap_phi_mux_tanThetaAdiv2_2_phi_fu_51_p4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_88_p0 <= cosThetaAdiv2_int_reg_364;
        elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_88_p0 <= ap_phi_mux_tanThetaAdiv2_2_phi_fu_51_p4;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_88_p0 <= bitcast_ln351_fu_230_p1;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_88_p0 <= tanThetaA_reg_310;
        else 
            grp_fu_88_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_88_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage3, tanThetaAdiv2_2_reg_48_pp0_iter8_reg, ap_CS_fsm_pp0_stage2, tanThetaA_reg_310, ap_CS_fsm_pp0_stage1, tmp_reg_327, ap_phi_mux_tanThetaAdiv2_2_phi_fu_51_p4, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage3)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_88_p1 <= tanThetaAdiv2_2_reg_48_pp0_iter8_reg;
        elsif (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_88_p1 <= ap_phi_mux_tanThetaAdiv2_2_phi_fu_51_p4;
        elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_88_p1 <= tmp_reg_327;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_88_p1 <= tanThetaA_reg_310;
        else 
            grp_fu_88_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_92_ce_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_ce, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))))) then 
            grp_fu_92_ce <= ap_const_logic_1;
        else 
            grp_fu_92_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln106_1_fu_171_p2 <= "1" when (tmp_30_fu_141_p4 = ap_const_lv8_0) else "0";
    icmp_ln106_2_fu_197_p2 <= "1" when (unsigned(ret_1_fu_191_p2) < unsigned(zext_ln1346_fu_151_p1)) else "0";
    icmp_ln106_3_fu_203_p2 <= "1" when (tmp_29_fu_127_p4 = ap_const_lv8_0) else "0";
    icmp_ln106_fu_165_p2 <= "1" when (unsigned(ret_fu_155_p2) < unsigned(zext_ln106_fu_161_p1)) else "0";
    or_ln106_1_fu_209_p2 <= (icmp_ln106_3_fu_203_p2 or icmp_ln106_2_fu_197_p2);
    or_ln106_fu_177_p2 <= (icmp_ln106_fu_165_p2 or icmp_ln106_1_fu_171_p2);
    p_Result_3_fu_223_p3 <= (p_Result_s_reg_294_pp0_iter3_reg & ap_const_lv31_3F800000);
    ret_1_fu_191_p2 <= std_logic_vector(unsigned(zext_ln106_fu_161_p1) + unsigned(ap_const_lv9_18));
    ret_fu_155_p2 <= std_logic_vector(unsigned(zext_ln1346_fu_151_p1) + unsigned(ap_const_lv9_18));
    select_ln228_1_fu_261_p3 <= 
        ap_const_lv32_3F800000 when (p_Result_s_reg_294_pp0_iter9_reg(0) = '1') else 
        ap_const_lv32_0;
    select_ln228_fu_254_p3 <= 
        ap_const_lv32_0 when (p_Result_s_reg_294_pp0_iter9_reg(0) = '1') else 
        ap_const_lv32_3F800000;
    select_ln244_fu_247_p3 <= 
        ap_const_lv32_BF3504F3 when (p_Result_2_reg_305_pp0_iter9_reg(0) = '1') else 
        ap_const_lv32_3F3504F3;
    tmp_29_fu_127_p4 <= data_V_fu_123_p1(30 downto 23);
    tmp_30_fu_141_p4 <= data_V_2_fu_137_p1(30 downto 23);
    zext_ln106_fu_161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_127_p4),9));
    zext_ln1346_fu_151_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_30_fu_141_p4),9));
end behav;
